// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: defs/gen/proto/antaris_api.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_defs_2fgen_2fproto_2fantaris_5fapi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_defs_2fgen_2fproto_2fantaris_5fapi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_defs_2fgen_2fproto_2fantaris_5fapi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[37]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
namespace antaris_api_peer_to_peer {
class AntarisCorrelationId;
struct AntarisCorrelationIdDefaultTypeInternal;
extern AntarisCorrelationIdDefaultTypeInternal _AntarisCorrelationId_default_instance_;
class AntarisReturnType;
struct AntarisReturnTypeDefaultTypeInternal;
extern AntarisReturnTypeDefaultTypeInternal _AntarisReturnType_default_instance_;
class AntarisSdkVersion;
struct AntarisSdkVersionDefaultTypeInternal;
extern AntarisSdkVersionDefaultTypeInternal _AntarisSdkVersion_default_instance_;
class CmdSequenceDoneParams;
struct CmdSequenceDoneParamsDefaultTypeInternal;
extern CmdSequenceDoneParamsDefaultTypeInternal _CmdSequenceDoneParams_default_instance_;
class GetEpsVoltage;
struct GetEpsVoltageDefaultTypeInternal;
extern GetEpsVoltageDefaultTypeInternal _GetEpsVoltage_default_instance_;
class GnssEphData;
struct GnssEphDataDefaultTypeInternal;
extern GnssEphDataDefaultTypeInternal _GnssEphData_default_instance_;
class HealthCheckParams;
struct HealthCheckParamsDefaultTypeInternal;
extern HealthCheckParamsDefaultTypeInternal _HealthCheckParams_default_instance_;
class PayloadMetricsInfo;
struct PayloadMetricsInfoDefaultTypeInternal;
extern PayloadMetricsInfoDefaultTypeInternal _PayloadMetricsInfo_default_instance_;
class PayloadMetricsResponse;
struct PayloadMetricsResponseDefaultTypeInternal;
extern PayloadMetricsResponseDefaultTypeInternal _PayloadMetricsResponse_default_instance_;
class ReqGetCurrentLocationParams;
struct ReqGetCurrentLocationParamsDefaultTypeInternal;
extern ReqGetCurrentLocationParamsDefaultTypeInternal _ReqGetCurrentLocationParams_default_instance_;
class ReqGetEpsVoltageStartReq;
struct ReqGetEpsVoltageStartReqDefaultTypeInternal;
extern ReqGetEpsVoltageStartReqDefaultTypeInternal _ReqGetEpsVoltageStartReq_default_instance_;
class ReqGetEpsVoltageStopReq;
struct ReqGetEpsVoltageStopReqDefaultTypeInternal;
extern ReqGetEpsVoltageStopReqDefaultTypeInternal _ReqGetEpsVoltageStopReq_default_instance_;
class ReqGnssEphStartDataReq;
struct ReqGnssEphStartDataReqDefaultTypeInternal;
extern ReqGnssEphStartDataReqDefaultTypeInternal _ReqGnssEphStartDataReq_default_instance_;
class ReqGnssEphStopDataReq;
struct ReqGnssEphStopDataReqDefaultTypeInternal;
extern ReqGnssEphStopDataReqDefaultTypeInternal _ReqGnssEphStopDataReq_default_instance_;
class ReqPayloadMetricsParams;
struct ReqPayloadMetricsParamsDefaultTypeInternal;
extern ReqPayloadMetricsParamsDefaultTypeInternal _ReqPayloadMetricsParams_default_instance_;
class ReqPayloadPowerControlParams;
struct ReqPayloadPowerControlParamsDefaultTypeInternal;
extern ReqPayloadPowerControlParamsDefaultTypeInternal _ReqPayloadPowerControlParams_default_instance_;
class ReqRegisterParams;
struct ReqRegisterParamsDefaultTypeInternal;
extern ReqRegisterParamsDefaultTypeInternal _ReqRegisterParams_default_instance_;
class ReqStageFileDownloadParams;
struct ReqStageFileDownloadParamsDefaultTypeInternal;
extern ReqStageFileDownloadParamsDefaultTypeInternal _ReqStageFileDownloadParams_default_instance_;
class RespGetCurrentLocationParams;
struct RespGetCurrentLocationParamsDefaultTypeInternal;
extern RespGetCurrentLocationParamsDefaultTypeInternal _RespGetCurrentLocationParams_default_instance_;
class RespGetEpsVoltageStartReq;
struct RespGetEpsVoltageStartReqDefaultTypeInternal;
extern RespGetEpsVoltageStartReqDefaultTypeInternal _RespGetEpsVoltageStartReq_default_instance_;
class RespGetEpsVoltageStopReq;
struct RespGetEpsVoltageStopReqDefaultTypeInternal;
extern RespGetEpsVoltageStopReqDefaultTypeInternal _RespGetEpsVoltageStopReq_default_instance_;
class RespGnssEphStartDataReq;
struct RespGnssEphStartDataReqDefaultTypeInternal;
extern RespGnssEphStartDataReqDefaultTypeInternal _RespGnssEphStartDataReq_default_instance_;
class RespGnssEphStopDataReq;
struct RespGnssEphStopDataReqDefaultTypeInternal;
extern RespGnssEphStopDataReqDefaultTypeInternal _RespGnssEphStopDataReq_default_instance_;
class RespHealthCheckParams;
struct RespHealthCheckParamsDefaultTypeInternal;
extern RespHealthCheckParamsDefaultTypeInternal _RespHealthCheckParams_default_instance_;
class RespPayloadPowerControlParams;
struct RespPayloadPowerControlParamsDefaultTypeInternal;
extern RespPayloadPowerControlParamsDefaultTypeInternal _RespPayloadPowerControlParams_default_instance_;
class RespRegisterParams;
struct RespRegisterParamsDefaultTypeInternal;
extern RespRegisterParamsDefaultTypeInternal _RespRegisterParams_default_instance_;
class RespSesTempReqParams;
struct RespSesTempReqParamsDefaultTypeInternal;
extern RespSesTempReqParamsDefaultTypeInternal _RespSesTempReqParams_default_instance_;
class RespShutdownParams;
struct RespShutdownParamsDefaultTypeInternal;
extern RespShutdownParamsDefaultTypeInternal _RespShutdownParams_default_instance_;
class RespStageFileDownloadParams;
struct RespStageFileDownloadParamsDefaultTypeInternal;
extern RespStageFileDownloadParamsDefaultTypeInternal _RespStageFileDownloadParams_default_instance_;
class RespStartSesThermMgmntReq;
struct RespStartSesThermMgmntReqDefaultTypeInternal;
extern RespStartSesThermMgmntReqDefaultTypeInternal _RespStartSesThermMgmntReq_default_instance_;
class RespStopSesThermMgmntReq;
struct RespStopSesThermMgmntReqDefaultTypeInternal;
extern RespStopSesThermMgmntReqDefaultTypeInternal _RespStopSesThermMgmntReq_default_instance_;
class SesTempReq;
struct SesTempReqDefaultTypeInternal;
extern SesTempReqDefaultTypeInternal _SesTempReq_default_instance_;
class SesThermalStatusNtf;
struct SesThermalStatusNtfDefaultTypeInternal;
extern SesThermalStatusNtfDefaultTypeInternal _SesThermalStatusNtf_default_instance_;
class ShutdownParams;
struct ShutdownParamsDefaultTypeInternal;
extern ShutdownParamsDefaultTypeInternal _ShutdownParams_default_instance_;
class StartSequenceParams;
struct StartSequenceParamsDefaultTypeInternal;
extern StartSequenceParamsDefaultTypeInternal _StartSequenceParams_default_instance_;
class StartSesThermMgmntReq;
struct StartSesThermMgmntReqDefaultTypeInternal;
extern StartSesThermMgmntReqDefaultTypeInternal _StartSesThermMgmntReq_default_instance_;
class StopSesThermMgmntReq;
struct StopSesThermMgmntReqDefaultTypeInternal;
extern StopSesThermMgmntReqDefaultTypeInternal _StopSesThermMgmntReq_default_instance_;
}  // namespace antaris_api_peer_to_peer
PROTOBUF_NAMESPACE_OPEN
template<> ::antaris_api_peer_to_peer::AntarisCorrelationId* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::AntarisCorrelationId>(Arena*);
template<> ::antaris_api_peer_to_peer::AntarisReturnType* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::AntarisReturnType>(Arena*);
template<> ::antaris_api_peer_to_peer::AntarisSdkVersion* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::AntarisSdkVersion>(Arena*);
template<> ::antaris_api_peer_to_peer::CmdSequenceDoneParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::CmdSequenceDoneParams>(Arena*);
template<> ::antaris_api_peer_to_peer::GetEpsVoltage* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::GetEpsVoltage>(Arena*);
template<> ::antaris_api_peer_to_peer::GnssEphData* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::GnssEphData>(Arena*);
template<> ::antaris_api_peer_to_peer::HealthCheckParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::HealthCheckParams>(Arena*);
template<> ::antaris_api_peer_to_peer::PayloadMetricsInfo* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::PayloadMetricsInfo>(Arena*);
template<> ::antaris_api_peer_to_peer::PayloadMetricsResponse* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::PayloadMetricsResponse>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqGetCurrentLocationParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqGetCurrentLocationParams>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqGetEpsVoltageStartReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqGetEpsVoltageStartReq>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqGetEpsVoltageStopReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqGetEpsVoltageStopReq>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqGnssEphStartDataReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqGnssEphStartDataReq>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqGnssEphStopDataReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqGnssEphStopDataReq>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqPayloadMetricsParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqPayloadMetricsParams>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqPayloadPowerControlParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqPayloadPowerControlParams>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqRegisterParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqRegisterParams>(Arena*);
template<> ::antaris_api_peer_to_peer::ReqStageFileDownloadParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ReqStageFileDownloadParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespGetCurrentLocationParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespGetCurrentLocationParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespGetEpsVoltageStartReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespGetEpsVoltageStartReq>(Arena*);
template<> ::antaris_api_peer_to_peer::RespGetEpsVoltageStopReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespGetEpsVoltageStopReq>(Arena*);
template<> ::antaris_api_peer_to_peer::RespGnssEphStartDataReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespGnssEphStartDataReq>(Arena*);
template<> ::antaris_api_peer_to_peer::RespGnssEphStopDataReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespGnssEphStopDataReq>(Arena*);
template<> ::antaris_api_peer_to_peer::RespHealthCheckParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespHealthCheckParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespPayloadPowerControlParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespPayloadPowerControlParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespRegisterParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespRegisterParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespSesTempReqParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespSesTempReqParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespShutdownParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespShutdownParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespStageFileDownloadParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespStageFileDownloadParams>(Arena*);
template<> ::antaris_api_peer_to_peer::RespStartSesThermMgmntReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespStartSesThermMgmntReq>(Arena*);
template<> ::antaris_api_peer_to_peer::RespStopSesThermMgmntReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::RespStopSesThermMgmntReq>(Arena*);
template<> ::antaris_api_peer_to_peer::SesTempReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::SesTempReq>(Arena*);
template<> ::antaris_api_peer_to_peer::SesThermalStatusNtf* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::SesThermalStatusNtf>(Arena*);
template<> ::antaris_api_peer_to_peer::ShutdownParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::ShutdownParams>(Arena*);
template<> ::antaris_api_peer_to_peer::StartSequenceParams* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::StartSequenceParams>(Arena*);
template<> ::antaris_api_peer_to_peer::StartSesThermMgmntReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::StartSesThermMgmntReq>(Arena*);
template<> ::antaris_api_peer_to_peer::StopSesThermMgmntReq* Arena::CreateMaybeMessage<::antaris_api_peer_to_peer::StopSesThermMgmntReq>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace antaris_api_peer_to_peer {

enum AntarisReturnCode : int {
  An_SUCCESS = 0,
  An_GENERIC_FAILURE = -1,
  An_NOT_IMPLEMENTED = -2,
  An_OUT_OF_RESOURCES = -3,
  An_NOT_PERMITTED = -4,
  An_INVALID_PARAMS = -5,
  An_INCOMPATIBLE_VERSION = -6,
  AntarisReturnCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  AntarisReturnCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool AntarisReturnCode_IsValid(int value);
constexpr AntarisReturnCode AntarisReturnCode_MIN = An_INCOMPATIBLE_VERSION;
constexpr AntarisReturnCode AntarisReturnCode_MAX = An_SUCCESS;
constexpr int AntarisReturnCode_ARRAYSIZE = AntarisReturnCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AntarisReturnCode_descriptor();
template<typename T>
inline const std::string& AntarisReturnCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AntarisReturnCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AntarisReturnCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AntarisReturnCode_descriptor(), enum_t_value);
}
inline bool AntarisReturnCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AntarisReturnCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AntarisReturnCode>(
    AntarisReturnCode_descriptor(), name, value);
}
// ===================================================================

class AntarisSdkVersion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.AntarisSdkVersion) */ {
 public:
  inline AntarisSdkVersion() : AntarisSdkVersion(nullptr) {}
  ~AntarisSdkVersion() override;
  explicit constexpr AntarisSdkVersion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AntarisSdkVersion(const AntarisSdkVersion& from);
  AntarisSdkVersion(AntarisSdkVersion&& from) noexcept
    : AntarisSdkVersion() {
    *this = ::std::move(from);
  }

  inline AntarisSdkVersion& operator=(const AntarisSdkVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline AntarisSdkVersion& operator=(AntarisSdkVersion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AntarisSdkVersion& default_instance() {
    return *internal_default_instance();
  }
  static inline const AntarisSdkVersion* internal_default_instance() {
    return reinterpret_cast<const AntarisSdkVersion*>(
               &_AntarisSdkVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AntarisSdkVersion& a, AntarisSdkVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(AntarisSdkVersion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AntarisSdkVersion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AntarisSdkVersion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AntarisSdkVersion>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AntarisSdkVersion& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AntarisSdkVersion& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AntarisSdkVersion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.AntarisSdkVersion";
  }
  protected:
  explicit AntarisSdkVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMajorFieldNumber = 1,
    kMinorFieldNumber = 2,
    kPatchFieldNumber = 3,
  };
  // int32 major = 1;
  void clear_major();
  int32_t major() const;
  void set_major(int32_t value);
  private:
  int32_t _internal_major() const;
  void _internal_set_major(int32_t value);
  public:

  // int32 minor = 2;
  void clear_minor();
  int32_t minor() const;
  void set_minor(int32_t value);
  private:
  int32_t _internal_minor() const;
  void _internal_set_minor(int32_t value);
  public:

  // int32 patch = 3;
  void clear_patch();
  int32_t patch() const;
  void set_patch(int32_t value);
  private:
  int32_t _internal_patch() const;
  void _internal_set_patch(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.AntarisSdkVersion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t major_;
  int32_t minor_;
  int32_t patch_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqRegisterParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqRegisterParams) */ {
 public:
  inline ReqRegisterParams() : ReqRegisterParams(nullptr) {}
  ~ReqRegisterParams() override;
  explicit constexpr ReqRegisterParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqRegisterParams(const ReqRegisterParams& from);
  ReqRegisterParams(ReqRegisterParams&& from) noexcept
    : ReqRegisterParams() {
    *this = ::std::move(from);
  }

  inline ReqRegisterParams& operator=(const ReqRegisterParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqRegisterParams& operator=(ReqRegisterParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqRegisterParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqRegisterParams* internal_default_instance() {
    return reinterpret_cast<const ReqRegisterParams*>(
               &_ReqRegisterParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ReqRegisterParams& a, ReqRegisterParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqRegisterParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqRegisterParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqRegisterParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqRegisterParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqRegisterParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqRegisterParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqRegisterParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqRegisterParams";
  }
  protected:
  explicit ReqRegisterParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSdkVersionFieldNumber = 3,
    kCorrelationIdFieldNumber = 1,
    kHealthCheckFailActionFieldNumber = 2,
  };
  // .antaris_api_peer_to_peer.AntarisSdkVersion sdk_version = 3;
  bool has_sdk_version() const;
  private:
  bool _internal_has_sdk_version() const;
  public:
  void clear_sdk_version();
  const ::antaris_api_peer_to_peer::AntarisSdkVersion& sdk_version() const;
  PROTOBUF_NODISCARD ::antaris_api_peer_to_peer::AntarisSdkVersion* release_sdk_version();
  ::antaris_api_peer_to_peer::AntarisSdkVersion* mutable_sdk_version();
  void set_allocated_sdk_version(::antaris_api_peer_to_peer::AntarisSdkVersion* sdk_version);
  private:
  const ::antaris_api_peer_to_peer::AntarisSdkVersion& _internal_sdk_version() const;
  ::antaris_api_peer_to_peer::AntarisSdkVersion* _internal_mutable_sdk_version();
  public:
  void unsafe_arena_set_allocated_sdk_version(
      ::antaris_api_peer_to_peer::AntarisSdkVersion* sdk_version);
  ::antaris_api_peer_to_peer::AntarisSdkVersion* unsafe_arena_release_sdk_version();

  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 health_check_fail_action = 2;
  void clear_health_check_fail_action();
  int32_t health_check_fail_action() const;
  void set_health_check_fail_action(int32_t value);
  private:
  int32_t _internal_health_check_fail_action() const;
  void _internal_set_health_check_fail_action(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqRegisterParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::antaris_api_peer_to_peer::AntarisSdkVersion* sdk_version_;
  int32_t correlation_id_;
  int32_t health_check_fail_action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespRegisterParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespRegisterParams) */ {
 public:
  inline RespRegisterParams() : RespRegisterParams(nullptr) {}
  ~RespRegisterParams() override;
  explicit constexpr RespRegisterParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespRegisterParams(const RespRegisterParams& from);
  RespRegisterParams(RespRegisterParams&& from) noexcept
    : RespRegisterParams() {
    *this = ::std::move(from);
  }

  inline RespRegisterParams& operator=(const RespRegisterParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespRegisterParams& operator=(RespRegisterParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespRegisterParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespRegisterParams* internal_default_instance() {
    return reinterpret_cast<const RespRegisterParams*>(
               &_RespRegisterParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RespRegisterParams& a, RespRegisterParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespRegisterParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespRegisterParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespRegisterParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespRegisterParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespRegisterParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespRegisterParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespRegisterParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespRegisterParams";
  }
  protected:
  explicit RespRegisterParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthTokenFieldNumber = 3,
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // string auth_token = 3;
  void clear_auth_token();
  const std::string& auth_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_auth_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_auth_token();
  PROTOBUF_NODISCARD std::string* release_auth_token();
  void set_allocated_auth_token(std::string* auth_token);
  private:
  const std::string& _internal_auth_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_auth_token(const std::string& value);
  std::string* _internal_mutable_auth_token();
  public:

  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespRegisterParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_token_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqGetCurrentLocationParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqGetCurrentLocationParams) */ {
 public:
  inline ReqGetCurrentLocationParams() : ReqGetCurrentLocationParams(nullptr) {}
  ~ReqGetCurrentLocationParams() override;
  explicit constexpr ReqGetCurrentLocationParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqGetCurrentLocationParams(const ReqGetCurrentLocationParams& from);
  ReqGetCurrentLocationParams(ReqGetCurrentLocationParams&& from) noexcept
    : ReqGetCurrentLocationParams() {
    *this = ::std::move(from);
  }

  inline ReqGetCurrentLocationParams& operator=(const ReqGetCurrentLocationParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqGetCurrentLocationParams& operator=(ReqGetCurrentLocationParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqGetCurrentLocationParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqGetCurrentLocationParams* internal_default_instance() {
    return reinterpret_cast<const ReqGetCurrentLocationParams*>(
               &_ReqGetCurrentLocationParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ReqGetCurrentLocationParams& a, ReqGetCurrentLocationParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqGetCurrentLocationParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqGetCurrentLocationParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqGetCurrentLocationParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqGetCurrentLocationParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqGetCurrentLocationParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqGetCurrentLocationParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGetCurrentLocationParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqGetCurrentLocationParams";
  }
  protected:
  explicit ReqGetCurrentLocationParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqGetCurrentLocationParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespGetCurrentLocationParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespGetCurrentLocationParams) */ {
 public:
  inline RespGetCurrentLocationParams() : RespGetCurrentLocationParams(nullptr) {}
  ~RespGetCurrentLocationParams() override;
  explicit constexpr RespGetCurrentLocationParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespGetCurrentLocationParams(const RespGetCurrentLocationParams& from);
  RespGetCurrentLocationParams(RespGetCurrentLocationParams&& from) noexcept
    : RespGetCurrentLocationParams() {
    *this = ::std::move(from);
  }

  inline RespGetCurrentLocationParams& operator=(const RespGetCurrentLocationParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespGetCurrentLocationParams& operator=(RespGetCurrentLocationParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespGetCurrentLocationParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespGetCurrentLocationParams* internal_default_instance() {
    return reinterpret_cast<const RespGetCurrentLocationParams*>(
               &_RespGetCurrentLocationParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RespGetCurrentLocationParams& a, RespGetCurrentLocationParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespGetCurrentLocationParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespGetCurrentLocationParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespGetCurrentLocationParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespGetCurrentLocationParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespGetCurrentLocationParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespGetCurrentLocationParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespGetCurrentLocationParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespGetCurrentLocationParams";
  }
  protected:
  explicit RespGetCurrentLocationParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
    kLatitudeFieldNumber = 3,
    kLongitudeFieldNumber = 4,
    kAltitudeFieldNumber = 5,
    kSdLatitudeFieldNumber = 6,
    kSdLongitudeFieldNumber = 7,
    kDeterminedAtFieldNumber = 9,
    kSdAltitudeFieldNumber = 8,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // double latitude = 3;
  void clear_latitude();
  double latitude() const;
  void set_latitude(double value);
  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);
  public:

  // double longitude = 4;
  void clear_longitude();
  double longitude() const;
  void set_longitude(double value);
  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);
  public:

  // double altitude = 5;
  void clear_altitude();
  double altitude() const;
  void set_altitude(double value);
  private:
  double _internal_altitude() const;
  void _internal_set_altitude(double value);
  public:

  // float sd_latitude = 6;
  void clear_sd_latitude();
  float sd_latitude() const;
  void set_sd_latitude(float value);
  private:
  float _internal_sd_latitude() const;
  void _internal_set_sd_latitude(float value);
  public:

  // float sd_longitude = 7;
  void clear_sd_longitude();
  float sd_longitude() const;
  void set_sd_longitude(float value);
  private:
  float _internal_sd_longitude() const;
  void _internal_set_sd_longitude(float value);
  public:

  // int64 determined_at = 9;
  void clear_determined_at();
  int64_t determined_at() const;
  void set_determined_at(int64_t value);
  private:
  int64_t _internal_determined_at() const;
  void _internal_set_determined_at(int64_t value);
  public:

  // float sd_altitude = 8;
  void clear_sd_altitude();
  float sd_altitude() const;
  void set_sd_altitude(float value);
  private:
  float _internal_sd_altitude() const;
  void _internal_set_sd_altitude(float value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespGetCurrentLocationParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  double latitude_;
  double longitude_;
  double altitude_;
  float sd_latitude_;
  float sd_longitude_;
  int64_t determined_at_;
  float sd_altitude_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqStageFileDownloadParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqStageFileDownloadParams) */ {
 public:
  inline ReqStageFileDownloadParams() : ReqStageFileDownloadParams(nullptr) {}
  ~ReqStageFileDownloadParams() override;
  explicit constexpr ReqStageFileDownloadParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqStageFileDownloadParams(const ReqStageFileDownloadParams& from);
  ReqStageFileDownloadParams(ReqStageFileDownloadParams&& from) noexcept
    : ReqStageFileDownloadParams() {
    *this = ::std::move(from);
  }

  inline ReqStageFileDownloadParams& operator=(const ReqStageFileDownloadParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqStageFileDownloadParams& operator=(ReqStageFileDownloadParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqStageFileDownloadParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqStageFileDownloadParams* internal_default_instance() {
    return reinterpret_cast<const ReqStageFileDownloadParams*>(
               &_ReqStageFileDownloadParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ReqStageFileDownloadParams& a, ReqStageFileDownloadParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqStageFileDownloadParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqStageFileDownloadParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqStageFileDownloadParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqStageFileDownloadParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqStageFileDownloadParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqStageFileDownloadParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqStageFileDownloadParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqStageFileDownloadParams";
  }
  protected:
  explicit ReqStageFileDownloadParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilePathFieldNumber = 2,
    kCorrelationIdFieldNumber = 1,
  };
  // string file_path = 2;
  void clear_file_path();
  const std::string& file_path() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_path(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_path();
  PROTOBUF_NODISCARD std::string* release_file_path();
  void set_allocated_file_path(std::string* file_path);
  private:
  const std::string& _internal_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_path(const std::string& value);
  std::string* _internal_mutable_file_path();
  public:

  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqStageFileDownloadParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_path_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespStageFileDownloadParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespStageFileDownloadParams) */ {
 public:
  inline RespStageFileDownloadParams() : RespStageFileDownloadParams(nullptr) {}
  ~RespStageFileDownloadParams() override;
  explicit constexpr RespStageFileDownloadParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespStageFileDownloadParams(const RespStageFileDownloadParams& from);
  RespStageFileDownloadParams(RespStageFileDownloadParams&& from) noexcept
    : RespStageFileDownloadParams() {
    *this = ::std::move(from);
  }

  inline RespStageFileDownloadParams& operator=(const RespStageFileDownloadParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespStageFileDownloadParams& operator=(RespStageFileDownloadParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespStageFileDownloadParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespStageFileDownloadParams* internal_default_instance() {
    return reinterpret_cast<const RespStageFileDownloadParams*>(
               &_RespStageFileDownloadParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RespStageFileDownloadParams& a, RespStageFileDownloadParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespStageFileDownloadParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespStageFileDownloadParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespStageFileDownloadParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespStageFileDownloadParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespStageFileDownloadParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespStageFileDownloadParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespStageFileDownloadParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespStageFileDownloadParams";
  }
  protected:
  explicit RespStageFileDownloadParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespStageFileDownloadParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqPayloadPowerControlParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqPayloadPowerControlParams) */ {
 public:
  inline ReqPayloadPowerControlParams() : ReqPayloadPowerControlParams(nullptr) {}
  ~ReqPayloadPowerControlParams() override;
  explicit constexpr ReqPayloadPowerControlParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqPayloadPowerControlParams(const ReqPayloadPowerControlParams& from);
  ReqPayloadPowerControlParams(ReqPayloadPowerControlParams&& from) noexcept
    : ReqPayloadPowerControlParams() {
    *this = ::std::move(from);
  }

  inline ReqPayloadPowerControlParams& operator=(const ReqPayloadPowerControlParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqPayloadPowerControlParams& operator=(ReqPayloadPowerControlParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqPayloadPowerControlParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqPayloadPowerControlParams* internal_default_instance() {
    return reinterpret_cast<const ReqPayloadPowerControlParams*>(
               &_ReqPayloadPowerControlParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ReqPayloadPowerControlParams& a, ReqPayloadPowerControlParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqPayloadPowerControlParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqPayloadPowerControlParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqPayloadPowerControlParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqPayloadPowerControlParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqPayloadPowerControlParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqPayloadPowerControlParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqPayloadPowerControlParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqPayloadPowerControlParams";
  }
  protected:
  explicit ReqPayloadPowerControlParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kPowerOperationFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 power_operation = 2;
  void clear_power_operation();
  int32_t power_operation() const;
  void set_power_operation(int32_t value);
  private:
  int32_t _internal_power_operation() const;
  void _internal_set_power_operation(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqPayloadPowerControlParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t power_operation_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespPayloadPowerControlParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespPayloadPowerControlParams) */ {
 public:
  inline RespPayloadPowerControlParams() : RespPayloadPowerControlParams(nullptr) {}
  ~RespPayloadPowerControlParams() override;
  explicit constexpr RespPayloadPowerControlParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespPayloadPowerControlParams(const RespPayloadPowerControlParams& from);
  RespPayloadPowerControlParams(RespPayloadPowerControlParams&& from) noexcept
    : RespPayloadPowerControlParams() {
    *this = ::std::move(from);
  }

  inline RespPayloadPowerControlParams& operator=(const RespPayloadPowerControlParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespPayloadPowerControlParams& operator=(RespPayloadPowerControlParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespPayloadPowerControlParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespPayloadPowerControlParams* internal_default_instance() {
    return reinterpret_cast<const RespPayloadPowerControlParams*>(
               &_RespPayloadPowerControlParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RespPayloadPowerControlParams& a, RespPayloadPowerControlParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespPayloadPowerControlParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespPayloadPowerControlParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespPayloadPowerControlParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespPayloadPowerControlParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespPayloadPowerControlParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespPayloadPowerControlParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespPayloadPowerControlParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespPayloadPowerControlParams";
  }
  protected:
  explicit RespPayloadPowerControlParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespPayloadPowerControlParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespShutdownParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespShutdownParams) */ {
 public:
  inline RespShutdownParams() : RespShutdownParams(nullptr) {}
  ~RespShutdownParams() override;
  explicit constexpr RespShutdownParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespShutdownParams(const RespShutdownParams& from);
  RespShutdownParams(RespShutdownParams&& from) noexcept
    : RespShutdownParams() {
    *this = ::std::move(from);
  }

  inline RespShutdownParams& operator=(const RespShutdownParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespShutdownParams& operator=(RespShutdownParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespShutdownParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespShutdownParams* internal_default_instance() {
    return reinterpret_cast<const RespShutdownParams*>(
               &_RespShutdownParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(RespShutdownParams& a, RespShutdownParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespShutdownParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespShutdownParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespShutdownParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespShutdownParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespShutdownParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespShutdownParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespShutdownParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespShutdownParams";
  }
  protected:
  explicit RespShutdownParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespShutdownParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespHealthCheckParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespHealthCheckParams) */ {
 public:
  inline RespHealthCheckParams() : RespHealthCheckParams(nullptr) {}
  ~RespHealthCheckParams() override;
  explicit constexpr RespHealthCheckParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespHealthCheckParams(const RespHealthCheckParams& from);
  RespHealthCheckParams(RespHealthCheckParams&& from) noexcept
    : RespHealthCheckParams() {
    *this = ::std::move(from);
  }

  inline RespHealthCheckParams& operator=(const RespHealthCheckParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespHealthCheckParams& operator=(RespHealthCheckParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespHealthCheckParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespHealthCheckParams* internal_default_instance() {
    return reinterpret_cast<const RespHealthCheckParams*>(
               &_RespHealthCheckParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(RespHealthCheckParams& a, RespHealthCheckParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespHealthCheckParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespHealthCheckParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespHealthCheckParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespHealthCheckParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespHealthCheckParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespHealthCheckParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespHealthCheckParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespHealthCheckParams";
  }
  protected:
  explicit RespHealthCheckParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kApplicationStateFieldNumber = 2,
    kReqsToPcInErrCntFieldNumber = 3,
    kRespsToPcInErrCntFieldNumber = 4,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 application_state = 2;
  void clear_application_state();
  int32_t application_state() const;
  void set_application_state(int32_t value);
  private:
  int32_t _internal_application_state() const;
  void _internal_set_application_state(int32_t value);
  public:

  // int32 reqs_to_pc_in_err_cnt = 3;
  void clear_reqs_to_pc_in_err_cnt();
  int32_t reqs_to_pc_in_err_cnt() const;
  void set_reqs_to_pc_in_err_cnt(int32_t value);
  private:
  int32_t _internal_reqs_to_pc_in_err_cnt() const;
  void _internal_set_reqs_to_pc_in_err_cnt(int32_t value);
  public:

  // int32 resps_to_pc_in_err_cnt = 4;
  void clear_resps_to_pc_in_err_cnt();
  int32_t resps_to_pc_in_err_cnt() const;
  void set_resps_to_pc_in_err_cnt(int32_t value);
  private:
  int32_t _internal_resps_to_pc_in_err_cnt() const;
  void _internal_set_resps_to_pc_in_err_cnt(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespHealthCheckParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t application_state_;
  int32_t reqs_to_pc_in_err_cnt_;
  int32_t resps_to_pc_in_err_cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class StartSequenceParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.StartSequenceParams) */ {
 public:
  inline StartSequenceParams() : StartSequenceParams(nullptr) {}
  ~StartSequenceParams() override;
  explicit constexpr StartSequenceParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartSequenceParams(const StartSequenceParams& from);
  StartSequenceParams(StartSequenceParams&& from) noexcept
    : StartSequenceParams() {
    *this = ::std::move(from);
  }

  inline StartSequenceParams& operator=(const StartSequenceParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartSequenceParams& operator=(StartSequenceParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartSequenceParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartSequenceParams* internal_default_instance() {
    return reinterpret_cast<const StartSequenceParams*>(
               &_StartSequenceParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(StartSequenceParams& a, StartSequenceParams& b) {
    a.Swap(&b);
  }
  inline void Swap(StartSequenceParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartSequenceParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartSequenceParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartSequenceParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StartSequenceParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const StartSequenceParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartSequenceParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.StartSequenceParams";
  }
  protected:
  explicit StartSequenceParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSequenceIdFieldNumber = 2,
    kSequenceParamsFieldNumber = 3,
    kScheduledDeadlineFieldNumber = 4,
    kCorrelationIdFieldNumber = 1,
  };
  // string sequence_id = 2;
  void clear_sequence_id();
  const std::string& sequence_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sequence_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sequence_id();
  PROTOBUF_NODISCARD std::string* release_sequence_id();
  void set_allocated_sequence_id(std::string* sequence_id);
  private:
  const std::string& _internal_sequence_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sequence_id(const std::string& value);
  std::string* _internal_mutable_sequence_id();
  public:

  // string sequence_params = 3;
  void clear_sequence_params();
  const std::string& sequence_params() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sequence_params(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sequence_params();
  PROTOBUF_NODISCARD std::string* release_sequence_params();
  void set_allocated_sequence_params(std::string* sequence_params);
  private:
  const std::string& _internal_sequence_params() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sequence_params(const std::string& value);
  std::string* _internal_mutable_sequence_params();
  public:

  // int64 scheduled_deadline = 4;
  void clear_scheduled_deadline();
  int64_t scheduled_deadline() const;
  void set_scheduled_deadline(int64_t value);
  private:
  int64_t _internal_scheduled_deadline() const;
  void _internal_set_scheduled_deadline(int64_t value);
  public:

  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.StartSequenceParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sequence_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sequence_params_;
  int64_t scheduled_deadline_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ShutdownParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ShutdownParams) */ {
 public:
  inline ShutdownParams() : ShutdownParams(nullptr) {}
  ~ShutdownParams() override;
  explicit constexpr ShutdownParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ShutdownParams(const ShutdownParams& from);
  ShutdownParams(ShutdownParams&& from) noexcept
    : ShutdownParams() {
    *this = ::std::move(from);
  }

  inline ShutdownParams& operator=(const ShutdownParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShutdownParams& operator=(ShutdownParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShutdownParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShutdownParams* internal_default_instance() {
    return reinterpret_cast<const ShutdownParams*>(
               &_ShutdownParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ShutdownParams& a, ShutdownParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ShutdownParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShutdownParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShutdownParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShutdownParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ShutdownParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ShutdownParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShutdownParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ShutdownParams";
  }
  protected:
  explicit ShutdownParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kGraceTimeFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 grace_time = 2;
  void clear_grace_time();
  int32_t grace_time() const;
  void set_grace_time(int32_t value);
  private:
  int32_t _internal_grace_time() const;
  void _internal_set_grace_time(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ShutdownParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t grace_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class HealthCheckParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.HealthCheckParams) */ {
 public:
  inline HealthCheckParams() : HealthCheckParams(nullptr) {}
  ~HealthCheckParams() override;
  explicit constexpr HealthCheckParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HealthCheckParams(const HealthCheckParams& from);
  HealthCheckParams(HealthCheckParams&& from) noexcept
    : HealthCheckParams() {
    *this = ::std::move(from);
  }

  inline HealthCheckParams& operator=(const HealthCheckParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline HealthCheckParams& operator=(HealthCheckParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HealthCheckParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const HealthCheckParams* internal_default_instance() {
    return reinterpret_cast<const HealthCheckParams*>(
               &_HealthCheckParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(HealthCheckParams& a, HealthCheckParams& b) {
    a.Swap(&b);
  }
  inline void Swap(HealthCheckParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HealthCheckParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HealthCheckParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HealthCheckParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HealthCheckParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const HealthCheckParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HealthCheckParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.HealthCheckParams";
  }
  protected:
  explicit HealthCheckParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kApplicationStateFieldNumber = 2,
    kReqsToPcInErrCntFieldNumber = 3,
    kRespsToPcInErrCntFieldNumber = 4,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 application_state = 2;
  void clear_application_state();
  int32_t application_state() const;
  void set_application_state(int32_t value);
  private:
  int32_t _internal_application_state() const;
  void _internal_set_application_state(int32_t value);
  public:

  // int32 reqs_to_pc_in_err_cnt = 3;
  void clear_reqs_to_pc_in_err_cnt();
  int32_t reqs_to_pc_in_err_cnt() const;
  void set_reqs_to_pc_in_err_cnt(int32_t value);
  private:
  int32_t _internal_reqs_to_pc_in_err_cnt() const;
  void _internal_set_reqs_to_pc_in_err_cnt(int32_t value);
  public:

  // int32 resps_to_pc_in_err_cnt = 4;
  void clear_resps_to_pc_in_err_cnt();
  int32_t resps_to_pc_in_err_cnt() const;
  void set_resps_to_pc_in_err_cnt(int32_t value);
  private:
  int32_t _internal_resps_to_pc_in_err_cnt() const;
  void _internal_set_resps_to_pc_in_err_cnt(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.HealthCheckParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t application_state_;
  int32_t reqs_to_pc_in_err_cnt_;
  int32_t resps_to_pc_in_err_cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class PayloadMetricsInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.PayloadMetricsInfo) */ {
 public:
  inline PayloadMetricsInfo() : PayloadMetricsInfo(nullptr) {}
  ~PayloadMetricsInfo() override;
  explicit constexpr PayloadMetricsInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PayloadMetricsInfo(const PayloadMetricsInfo& from);
  PayloadMetricsInfo(PayloadMetricsInfo&& from) noexcept
    : PayloadMetricsInfo() {
    *this = ::std::move(from);
  }

  inline PayloadMetricsInfo& operator=(const PayloadMetricsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PayloadMetricsInfo& operator=(PayloadMetricsInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PayloadMetricsInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PayloadMetricsInfo* internal_default_instance() {
    return reinterpret_cast<const PayloadMetricsInfo*>(
               &_PayloadMetricsInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PayloadMetricsInfo& a, PayloadMetricsInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PayloadMetricsInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PayloadMetricsInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PayloadMetricsInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PayloadMetricsInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PayloadMetricsInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PayloadMetricsInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PayloadMetricsInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.PayloadMetricsInfo";
  }
  protected:
  explicit PayloadMetricsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNamesFieldNumber = 2,
    kCounterFieldNumber = 1,
  };
  // string names = 2;
  void clear_names();
  const std::string& names() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_names(ArgT0&& arg0, ArgT... args);
  std::string* mutable_names();
  PROTOBUF_NODISCARD std::string* release_names();
  void set_allocated_names(std::string* names);
  private:
  const std::string& _internal_names() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_names(const std::string& value);
  std::string* _internal_mutable_names();
  public:

  // int32 counter = 1;
  void clear_counter();
  int32_t counter() const;
  void set_counter(int32_t value);
  private:
  int32_t _internal_counter() const;
  void _internal_set_counter(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.PayloadMetricsInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr names_;
  int32_t counter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqPayloadMetricsParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqPayloadMetricsParams) */ {
 public:
  inline ReqPayloadMetricsParams() : ReqPayloadMetricsParams(nullptr) {}
  ~ReqPayloadMetricsParams() override;
  explicit constexpr ReqPayloadMetricsParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqPayloadMetricsParams(const ReqPayloadMetricsParams& from);
  ReqPayloadMetricsParams(ReqPayloadMetricsParams&& from) noexcept
    : ReqPayloadMetricsParams() {
    *this = ::std::move(from);
  }

  inline ReqPayloadMetricsParams& operator=(const ReqPayloadMetricsParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqPayloadMetricsParams& operator=(ReqPayloadMetricsParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqPayloadMetricsParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqPayloadMetricsParams* internal_default_instance() {
    return reinterpret_cast<const ReqPayloadMetricsParams*>(
               &_ReqPayloadMetricsParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ReqPayloadMetricsParams& a, ReqPayloadMetricsParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqPayloadMetricsParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqPayloadMetricsParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqPayloadMetricsParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqPayloadMetricsParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqPayloadMetricsParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqPayloadMetricsParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqPayloadMetricsParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqPayloadMetricsParams";
  }
  protected:
  explicit ReqPayloadMetricsParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqPayloadMetricsParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class PayloadMetricsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.PayloadMetricsResponse) */ {
 public:
  inline PayloadMetricsResponse() : PayloadMetricsResponse(nullptr) {}
  ~PayloadMetricsResponse() override;
  explicit constexpr PayloadMetricsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PayloadMetricsResponse(const PayloadMetricsResponse& from);
  PayloadMetricsResponse(PayloadMetricsResponse&& from) noexcept
    : PayloadMetricsResponse() {
    *this = ::std::move(from);
  }

  inline PayloadMetricsResponse& operator=(const PayloadMetricsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PayloadMetricsResponse& operator=(PayloadMetricsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PayloadMetricsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PayloadMetricsResponse* internal_default_instance() {
    return reinterpret_cast<const PayloadMetricsResponse*>(
               &_PayloadMetricsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PayloadMetricsResponse& a, PayloadMetricsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PayloadMetricsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PayloadMetricsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PayloadMetricsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PayloadMetricsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PayloadMetricsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PayloadMetricsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PayloadMetricsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.PayloadMetricsResponse";
  }
  protected:
  explicit PayloadMetricsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 4,
    kTimestampFieldNumber = 2,
    kCorrelationIdFieldNumber = 1,
    kUsedCounterFieldNumber = 3,
  };
  // repeated .antaris_api_peer_to_peer.PayloadMetricsInfo metrics = 4;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;
  public:
  void clear_metrics();
  ::antaris_api_peer_to_peer::PayloadMetricsInfo* mutable_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::antaris_api_peer_to_peer::PayloadMetricsInfo >*
      mutable_metrics();
  private:
  const ::antaris_api_peer_to_peer::PayloadMetricsInfo& _internal_metrics(int index) const;
  ::antaris_api_peer_to_peer::PayloadMetricsInfo* _internal_add_metrics();
  public:
  const ::antaris_api_peer_to_peer::PayloadMetricsInfo& metrics(int index) const;
  ::antaris_api_peer_to_peer::PayloadMetricsInfo* add_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::antaris_api_peer_to_peer::PayloadMetricsInfo >&
      metrics() const;

  // int64 timestamp = 2;
  void clear_timestamp();
  int64_t timestamp() const;
  void set_timestamp(int64_t value);
  private:
  int64_t _internal_timestamp() const;
  void _internal_set_timestamp(int64_t value);
  public:

  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 used_counter = 3;
  void clear_used_counter();
  int32_t used_counter() const;
  void set_used_counter(int32_t value);
  private:
  int32_t _internal_used_counter() const;
  void _internal_set_used_counter(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.PayloadMetricsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::antaris_api_peer_to_peer::PayloadMetricsInfo > metrics_;
  int64_t timestamp_;
  int32_t correlation_id_;
  int32_t used_counter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CmdSequenceDoneParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.CmdSequenceDoneParams) */ {
 public:
  inline CmdSequenceDoneParams() : CmdSequenceDoneParams(nullptr) {}
  ~CmdSequenceDoneParams() override;
  explicit constexpr CmdSequenceDoneParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CmdSequenceDoneParams(const CmdSequenceDoneParams& from);
  CmdSequenceDoneParams(CmdSequenceDoneParams&& from) noexcept
    : CmdSequenceDoneParams() {
    *this = ::std::move(from);
  }

  inline CmdSequenceDoneParams& operator=(const CmdSequenceDoneParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline CmdSequenceDoneParams& operator=(CmdSequenceDoneParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CmdSequenceDoneParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const CmdSequenceDoneParams* internal_default_instance() {
    return reinterpret_cast<const CmdSequenceDoneParams*>(
               &_CmdSequenceDoneParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CmdSequenceDoneParams& a, CmdSequenceDoneParams& b) {
    a.Swap(&b);
  }
  inline void Swap(CmdSequenceDoneParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CmdSequenceDoneParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CmdSequenceDoneParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CmdSequenceDoneParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CmdSequenceDoneParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CmdSequenceDoneParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CmdSequenceDoneParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.CmdSequenceDoneParams";
  }
  protected:
  explicit CmdSequenceDoneParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSequenceIdFieldNumber = 1,
  };
  // string sequence_id = 1;
  void clear_sequence_id();
  const std::string& sequence_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sequence_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sequence_id();
  PROTOBUF_NODISCARD std::string* release_sequence_id();
  void set_allocated_sequence_id(std::string* sequence_id);
  private:
  const std::string& _internal_sequence_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sequence_id(const std::string& value);
  std::string* _internal_mutable_sequence_id();
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.CmdSequenceDoneParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sequence_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqGnssEphStopDataReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqGnssEphStopDataReq) */ {
 public:
  inline ReqGnssEphStopDataReq() : ReqGnssEphStopDataReq(nullptr) {}
  ~ReqGnssEphStopDataReq() override;
  explicit constexpr ReqGnssEphStopDataReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqGnssEphStopDataReq(const ReqGnssEphStopDataReq& from);
  ReqGnssEphStopDataReq(ReqGnssEphStopDataReq&& from) noexcept
    : ReqGnssEphStopDataReq() {
    *this = ::std::move(from);
  }

  inline ReqGnssEphStopDataReq& operator=(const ReqGnssEphStopDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqGnssEphStopDataReq& operator=(ReqGnssEphStopDataReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqGnssEphStopDataReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqGnssEphStopDataReq* internal_default_instance() {
    return reinterpret_cast<const ReqGnssEphStopDataReq*>(
               &_ReqGnssEphStopDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ReqGnssEphStopDataReq& a, ReqGnssEphStopDataReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqGnssEphStopDataReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqGnssEphStopDataReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqGnssEphStopDataReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqGnssEphStopDataReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqGnssEphStopDataReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqGnssEphStopDataReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGnssEphStopDataReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqGnssEphStopDataReq";
  }
  protected:
  explicit ReqGnssEphStopDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqGnssEphStopDataReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespGnssEphStopDataReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespGnssEphStopDataReq) */ {
 public:
  inline RespGnssEphStopDataReq() : RespGnssEphStopDataReq(nullptr) {}
  ~RespGnssEphStopDataReq() override;
  explicit constexpr RespGnssEphStopDataReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespGnssEphStopDataReq(const RespGnssEphStopDataReq& from);
  RespGnssEphStopDataReq(RespGnssEphStopDataReq&& from) noexcept
    : RespGnssEphStopDataReq() {
    *this = ::std::move(from);
  }

  inline RespGnssEphStopDataReq& operator=(const RespGnssEphStopDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespGnssEphStopDataReq& operator=(RespGnssEphStopDataReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespGnssEphStopDataReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespGnssEphStopDataReq* internal_default_instance() {
    return reinterpret_cast<const RespGnssEphStopDataReq*>(
               &_RespGnssEphStopDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(RespGnssEphStopDataReq& a, RespGnssEphStopDataReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RespGnssEphStopDataReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespGnssEphStopDataReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespGnssEphStopDataReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespGnssEphStopDataReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespGnssEphStopDataReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespGnssEphStopDataReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespGnssEphStopDataReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespGnssEphStopDataReq";
  }
  protected:
  explicit RespGnssEphStopDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespGnssEphStopDataReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqGnssEphStartDataReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqGnssEphStartDataReq) */ {
 public:
  inline ReqGnssEphStartDataReq() : ReqGnssEphStartDataReq(nullptr) {}
  ~ReqGnssEphStartDataReq() override;
  explicit constexpr ReqGnssEphStartDataReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqGnssEphStartDataReq(const ReqGnssEphStartDataReq& from);
  ReqGnssEphStartDataReq(ReqGnssEphStartDataReq&& from) noexcept
    : ReqGnssEphStartDataReq() {
    *this = ::std::move(from);
  }

  inline ReqGnssEphStartDataReq& operator=(const ReqGnssEphStartDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqGnssEphStartDataReq& operator=(ReqGnssEphStartDataReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqGnssEphStartDataReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqGnssEphStartDataReq* internal_default_instance() {
    return reinterpret_cast<const ReqGnssEphStartDataReq*>(
               &_ReqGnssEphStartDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ReqGnssEphStartDataReq& a, ReqGnssEphStartDataReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqGnssEphStartDataReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqGnssEphStartDataReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqGnssEphStartDataReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqGnssEphStartDataReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqGnssEphStartDataReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqGnssEphStartDataReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGnssEphStartDataReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqGnssEphStartDataReq";
  }
  protected:
  explicit ReqGnssEphStartDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kPeriodicityInMsFieldNumber = 2,
    kEph2EnableFieldNumber = 3,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 periodicity_in_ms = 2;
  void clear_periodicity_in_ms();
  int32_t periodicity_in_ms() const;
  void set_periodicity_in_ms(int32_t value);
  private:
  int32_t _internal_periodicity_in_ms() const;
  void _internal_set_periodicity_in_ms(int32_t value);
  public:

  // int32 eph2_enable = 3;
  void clear_eph2_enable();
  int32_t eph2_enable() const;
  void set_eph2_enable(int32_t value);
  private:
  int32_t _internal_eph2_enable() const;
  void _internal_set_eph2_enable(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqGnssEphStartDataReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t periodicity_in_ms_;
  int32_t eph2_enable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespGnssEphStartDataReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespGnssEphStartDataReq) */ {
 public:
  inline RespGnssEphStartDataReq() : RespGnssEphStartDataReq(nullptr) {}
  ~RespGnssEphStartDataReq() override;
  explicit constexpr RespGnssEphStartDataReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespGnssEphStartDataReq(const RespGnssEphStartDataReq& from);
  RespGnssEphStartDataReq(RespGnssEphStartDataReq&& from) noexcept
    : RespGnssEphStartDataReq() {
    *this = ::std::move(from);
  }

  inline RespGnssEphStartDataReq& operator=(const RespGnssEphStartDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespGnssEphStartDataReq& operator=(RespGnssEphStartDataReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespGnssEphStartDataReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespGnssEphStartDataReq* internal_default_instance() {
    return reinterpret_cast<const RespGnssEphStartDataReq*>(
               &_RespGnssEphStartDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(RespGnssEphStartDataReq& a, RespGnssEphStartDataReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RespGnssEphStartDataReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespGnssEphStartDataReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespGnssEphStartDataReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespGnssEphStartDataReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespGnssEphStartDataReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespGnssEphStartDataReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespGnssEphStartDataReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespGnssEphStartDataReq";
  }
  protected:
  explicit RespGnssEphStartDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespGnssEphStartDataReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class GnssEphData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.GnssEphData) */ {
 public:
  inline GnssEphData() : GnssEphData(nullptr) {}
  ~GnssEphData() override;
  explicit constexpr GnssEphData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GnssEphData(const GnssEphData& from);
  GnssEphData(GnssEphData&& from) noexcept
    : GnssEphData() {
    *this = ::std::move(from);
  }

  inline GnssEphData& operator=(const GnssEphData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GnssEphData& operator=(GnssEphData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GnssEphData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GnssEphData* internal_default_instance() {
    return reinterpret_cast<const GnssEphData*>(
               &_GnssEphData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GnssEphData& a, GnssEphData& b) {
    a.Swap(&b);
  }
  inline void Swap(GnssEphData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GnssEphData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GnssEphData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GnssEphData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GnssEphData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GnssEphData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GnssEphData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.GnssEphData";
  }
  protected:
  explicit GnssEphData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGpsPositionEcefFieldNumber = 5,
    kGpsVelocityEcefFieldNumber = 6,
    kPositionWrtEciFieldNumber = 9,
    kVelocityWrtEciFieldNumber = 10,
    kPositionWrtEcefFieldNumber = 11,
    kVelocityWrtEcefFieldNumber = 12,
    kBodyRateFieldNumber = 13,
    kAttitudeFieldNumber = 14,
    kAdcsPosFieldNumber = 15,
    kNadirVectorBodyFieldNumber = 16,
    kGdNadirVectorBodyFieldNumber = 17,
    kCorrelationIdFieldNumber = 1,
    kGpsFixTimeFieldNumber = 2,
    kObcTimeFieldNumber = 4,
    kGpsSysTimeFieldNumber = 3,
    kGpsValidityFlagPosVelFieldNumber = 7,
    kAdcsTimeFieldNumber = 8,
    kBetaAngleFieldNumber = 18,
    kValidityFlagsFieldNumber = 19,
  };
  // repeated int32 gps_position_ecef = 5;
  int gps_position_ecef_size() const;
  private:
  int _internal_gps_position_ecef_size() const;
  public:
  void clear_gps_position_ecef();
  private:
  int32_t _internal_gps_position_ecef(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_gps_position_ecef() const;
  void _internal_add_gps_position_ecef(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_gps_position_ecef();
  public:
  int32_t gps_position_ecef(int index) const;
  void set_gps_position_ecef(int index, int32_t value);
  void add_gps_position_ecef(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      gps_position_ecef() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_gps_position_ecef();

  // repeated int32 gps_velocity_ecef = 6;
  int gps_velocity_ecef_size() const;
  private:
  int _internal_gps_velocity_ecef_size() const;
  public:
  void clear_gps_velocity_ecef();
  private:
  int32_t _internal_gps_velocity_ecef(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_gps_velocity_ecef() const;
  void _internal_add_gps_velocity_ecef(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_gps_velocity_ecef();
  public:
  int32_t gps_velocity_ecef(int index) const;
  void set_gps_velocity_ecef(int index, int32_t value);
  void add_gps_velocity_ecef(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      gps_velocity_ecef() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_gps_velocity_ecef();

  // repeated int64 position_wrt_eci = 9;
  int position_wrt_eci_size() const;
  private:
  int _internal_position_wrt_eci_size() const;
  public:
  void clear_position_wrt_eci();
  private:
  int64_t _internal_position_wrt_eci(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_position_wrt_eci() const;
  void _internal_add_position_wrt_eci(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_position_wrt_eci();
  public:
  int64_t position_wrt_eci(int index) const;
  void set_position_wrt_eci(int index, int64_t value);
  void add_position_wrt_eci(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      position_wrt_eci() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_position_wrt_eci();

  // repeated int64 velocity_wrt_eci = 10;
  int velocity_wrt_eci_size() const;
  private:
  int _internal_velocity_wrt_eci_size() const;
  public:
  void clear_velocity_wrt_eci();
  private:
  int64_t _internal_velocity_wrt_eci(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_velocity_wrt_eci() const;
  void _internal_add_velocity_wrt_eci(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_velocity_wrt_eci();
  public:
  int64_t velocity_wrt_eci(int index) const;
  void set_velocity_wrt_eci(int index, int64_t value);
  void add_velocity_wrt_eci(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      velocity_wrt_eci() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_velocity_wrt_eci();

  // repeated int64 position_wrt_ecef = 11;
  int position_wrt_ecef_size() const;
  private:
  int _internal_position_wrt_ecef_size() const;
  public:
  void clear_position_wrt_ecef();
  private:
  int64_t _internal_position_wrt_ecef(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_position_wrt_ecef() const;
  void _internal_add_position_wrt_ecef(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_position_wrt_ecef();
  public:
  int64_t position_wrt_ecef(int index) const;
  void set_position_wrt_ecef(int index, int64_t value);
  void add_position_wrt_ecef(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      position_wrt_ecef() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_position_wrt_ecef();

  // repeated int64 velocity_wrt_ecef = 12;
  int velocity_wrt_ecef_size() const;
  private:
  int _internal_velocity_wrt_ecef_size() const;
  public:
  void clear_velocity_wrt_ecef();
  private:
  int64_t _internal_velocity_wrt_ecef(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_velocity_wrt_ecef() const;
  void _internal_add_velocity_wrt_ecef(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_velocity_wrt_ecef();
  public:
  int64_t velocity_wrt_ecef(int index) const;
  void set_velocity_wrt_ecef(int index, int64_t value);
  void add_velocity_wrt_ecef(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      velocity_wrt_ecef() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_velocity_wrt_ecef();

  // repeated int32 body_rate = 13;
  int body_rate_size() const;
  private:
  int _internal_body_rate_size() const;
  public:
  void clear_body_rate();
  private:
  int32_t _internal_body_rate(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_body_rate() const;
  void _internal_add_body_rate(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_body_rate();
  public:
  int32_t body_rate(int index) const;
  void set_body_rate(int index, int32_t value);
  void add_body_rate(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      body_rate() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_body_rate();

  // repeated int32 attitude = 14;
  int attitude_size() const;
  private:
  int _internal_attitude_size() const;
  public:
  void clear_attitude();
  private:
  int32_t _internal_attitude(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_attitude() const;
  void _internal_add_attitude(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_attitude();
  public:
  int32_t attitude(int index) const;
  void set_attitude(int index, int32_t value);
  void add_attitude(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      attitude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_attitude();

  // repeated int32 adcs_pos = 15;
  int adcs_pos_size() const;
  private:
  int _internal_adcs_pos_size() const;
  public:
  void clear_adcs_pos();
  private:
  int32_t _internal_adcs_pos(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_adcs_pos() const;
  void _internal_add_adcs_pos(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_adcs_pos();
  public:
  int32_t adcs_pos(int index) const;
  void set_adcs_pos(int index, int32_t value);
  void add_adcs_pos(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      adcs_pos() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_adcs_pos();

  // repeated int32 nadir_vector_body = 16;
  int nadir_vector_body_size() const;
  private:
  int _internal_nadir_vector_body_size() const;
  public:
  void clear_nadir_vector_body();
  private:
  int32_t _internal_nadir_vector_body(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_nadir_vector_body() const;
  void _internal_add_nadir_vector_body(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_nadir_vector_body();
  public:
  int32_t nadir_vector_body(int index) const;
  void set_nadir_vector_body(int index, int32_t value);
  void add_nadir_vector_body(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      nadir_vector_body() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_nadir_vector_body();

  // repeated int32 gd_nadir_vector_body = 17;
  int gd_nadir_vector_body_size() const;
  private:
  int _internal_gd_nadir_vector_body_size() const;
  public:
  void clear_gd_nadir_vector_body();
  private:
  int32_t _internal_gd_nadir_vector_body(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_gd_nadir_vector_body() const;
  void _internal_add_gd_nadir_vector_body(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_gd_nadir_vector_body();
  public:
  int32_t gd_nadir_vector_body(int index) const;
  void set_gd_nadir_vector_body(int index, int32_t value);
  void add_gd_nadir_vector_body(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      gd_nadir_vector_body() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_gd_nadir_vector_body();

  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 gps_fix_time = 2;
  void clear_gps_fix_time();
  int32_t gps_fix_time() const;
  void set_gps_fix_time(int32_t value);
  private:
  int32_t _internal_gps_fix_time() const;
  void _internal_set_gps_fix_time(int32_t value);
  public:

  // int64 obc_time = 4;
  void clear_obc_time();
  int64_t obc_time() const;
  void set_obc_time(int64_t value);
  private:
  int64_t _internal_obc_time() const;
  void _internal_set_obc_time(int64_t value);
  public:

  // int32 gps_sys_time = 3;
  void clear_gps_sys_time();
  int32_t gps_sys_time() const;
  void set_gps_sys_time(int32_t value);
  private:
  int32_t _internal_gps_sys_time() const;
  void _internal_set_gps_sys_time(int32_t value);
  public:

  // int32 gps_validity_flag_pos_vel = 7;
  void clear_gps_validity_flag_pos_vel();
  int32_t gps_validity_flag_pos_vel() const;
  void set_gps_validity_flag_pos_vel(int32_t value);
  private:
  int32_t _internal_gps_validity_flag_pos_vel() const;
  void _internal_set_gps_validity_flag_pos_vel(int32_t value);
  public:

  // int64 adcs_time = 8;
  void clear_adcs_time();
  int64_t adcs_time() const;
  void set_adcs_time(int64_t value);
  private:
  int64_t _internal_adcs_time() const;
  void _internal_set_adcs_time(int64_t value);
  public:

  // int32 beta_angle = 18;
  void clear_beta_angle();
  int32_t beta_angle() const;
  void set_beta_angle(int32_t value);
  private:
  int32_t _internal_beta_angle() const;
  void _internal_set_beta_angle(int32_t value);
  public:

  // int32 validity_flags = 19;
  void clear_validity_flags();
  int32_t validity_flags() const;
  void set_validity_flags(int32_t value);
  private:
  int32_t _internal_validity_flags() const;
  void _internal_set_validity_flags(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.GnssEphData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > gps_position_ecef_;
  mutable std::atomic<int> _gps_position_ecef_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > gps_velocity_ecef_;
  mutable std::atomic<int> _gps_velocity_ecef_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > position_wrt_eci_;
  mutable std::atomic<int> _position_wrt_eci_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > velocity_wrt_eci_;
  mutable std::atomic<int> _velocity_wrt_eci_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > position_wrt_ecef_;
  mutable std::atomic<int> _position_wrt_ecef_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > velocity_wrt_ecef_;
  mutable std::atomic<int> _velocity_wrt_ecef_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > body_rate_;
  mutable std::atomic<int> _body_rate_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > attitude_;
  mutable std::atomic<int> _attitude_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > adcs_pos_;
  mutable std::atomic<int> _adcs_pos_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > nadir_vector_body_;
  mutable std::atomic<int> _nadir_vector_body_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > gd_nadir_vector_body_;
  mutable std::atomic<int> _gd_nadir_vector_body_cached_byte_size_;
  int32_t correlation_id_;
  int32_t gps_fix_time_;
  int64_t obc_time_;
  int32_t gps_sys_time_;
  int32_t gps_validity_flag_pos_vel_;
  int64_t adcs_time_;
  int32_t beta_angle_;
  int32_t validity_flags_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqGetEpsVoltageStopReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqGetEpsVoltageStopReq) */ {
 public:
  inline ReqGetEpsVoltageStopReq() : ReqGetEpsVoltageStopReq(nullptr) {}
  ~ReqGetEpsVoltageStopReq() override;
  explicit constexpr ReqGetEpsVoltageStopReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqGetEpsVoltageStopReq(const ReqGetEpsVoltageStopReq& from);
  ReqGetEpsVoltageStopReq(ReqGetEpsVoltageStopReq&& from) noexcept
    : ReqGetEpsVoltageStopReq() {
    *this = ::std::move(from);
  }

  inline ReqGetEpsVoltageStopReq& operator=(const ReqGetEpsVoltageStopReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqGetEpsVoltageStopReq& operator=(ReqGetEpsVoltageStopReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqGetEpsVoltageStopReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqGetEpsVoltageStopReq* internal_default_instance() {
    return reinterpret_cast<const ReqGetEpsVoltageStopReq*>(
               &_ReqGetEpsVoltageStopReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ReqGetEpsVoltageStopReq& a, ReqGetEpsVoltageStopReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqGetEpsVoltageStopReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqGetEpsVoltageStopReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqGetEpsVoltageStopReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqGetEpsVoltageStopReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqGetEpsVoltageStopReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqGetEpsVoltageStopReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGetEpsVoltageStopReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqGetEpsVoltageStopReq";
  }
  protected:
  explicit ReqGetEpsVoltageStopReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqGetEpsVoltageStopReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespGetEpsVoltageStopReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespGetEpsVoltageStopReq) */ {
 public:
  inline RespGetEpsVoltageStopReq() : RespGetEpsVoltageStopReq(nullptr) {}
  ~RespGetEpsVoltageStopReq() override;
  explicit constexpr RespGetEpsVoltageStopReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespGetEpsVoltageStopReq(const RespGetEpsVoltageStopReq& from);
  RespGetEpsVoltageStopReq(RespGetEpsVoltageStopReq&& from) noexcept
    : RespGetEpsVoltageStopReq() {
    *this = ::std::move(from);
  }

  inline RespGetEpsVoltageStopReq& operator=(const RespGetEpsVoltageStopReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespGetEpsVoltageStopReq& operator=(RespGetEpsVoltageStopReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespGetEpsVoltageStopReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespGetEpsVoltageStopReq* internal_default_instance() {
    return reinterpret_cast<const RespGetEpsVoltageStopReq*>(
               &_RespGetEpsVoltageStopReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(RespGetEpsVoltageStopReq& a, RespGetEpsVoltageStopReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RespGetEpsVoltageStopReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespGetEpsVoltageStopReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespGetEpsVoltageStopReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespGetEpsVoltageStopReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespGetEpsVoltageStopReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespGetEpsVoltageStopReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespGetEpsVoltageStopReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespGetEpsVoltageStopReq";
  }
  protected:
  explicit RespGetEpsVoltageStopReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespGetEpsVoltageStopReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class ReqGetEpsVoltageStartReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq) */ {
 public:
  inline ReqGetEpsVoltageStartReq() : ReqGetEpsVoltageStartReq(nullptr) {}
  ~ReqGetEpsVoltageStartReq() override;
  explicit constexpr ReqGetEpsVoltageStartReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqGetEpsVoltageStartReq(const ReqGetEpsVoltageStartReq& from);
  ReqGetEpsVoltageStartReq(ReqGetEpsVoltageStartReq&& from) noexcept
    : ReqGetEpsVoltageStartReq() {
    *this = ::std::move(from);
  }

  inline ReqGetEpsVoltageStartReq& operator=(const ReqGetEpsVoltageStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqGetEpsVoltageStartReq& operator=(ReqGetEpsVoltageStartReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqGetEpsVoltageStartReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqGetEpsVoltageStartReq* internal_default_instance() {
    return reinterpret_cast<const ReqGetEpsVoltageStartReq*>(
               &_ReqGetEpsVoltageStartReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ReqGetEpsVoltageStartReq& a, ReqGetEpsVoltageStartReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqGetEpsVoltageStartReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqGetEpsVoltageStartReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqGetEpsVoltageStartReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqGetEpsVoltageStartReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReqGetEpsVoltageStartReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReqGetEpsVoltageStartReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGetEpsVoltageStartReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq";
  }
  protected:
  explicit ReqGetEpsVoltageStartReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kPeriodicityInMsFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 periodicity_in_ms = 2;
  void clear_periodicity_in_ms();
  int32_t periodicity_in_ms() const;
  void set_periodicity_in_ms(int32_t value);
  private:
  int32_t _internal_periodicity_in_ms() const;
  void _internal_set_periodicity_in_ms(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t periodicity_in_ms_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespGetEpsVoltageStartReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespGetEpsVoltageStartReq) */ {
 public:
  inline RespGetEpsVoltageStartReq() : RespGetEpsVoltageStartReq(nullptr) {}
  ~RespGetEpsVoltageStartReq() override;
  explicit constexpr RespGetEpsVoltageStartReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespGetEpsVoltageStartReq(const RespGetEpsVoltageStartReq& from);
  RespGetEpsVoltageStartReq(RespGetEpsVoltageStartReq&& from) noexcept
    : RespGetEpsVoltageStartReq() {
    *this = ::std::move(from);
  }

  inline RespGetEpsVoltageStartReq& operator=(const RespGetEpsVoltageStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespGetEpsVoltageStartReq& operator=(RespGetEpsVoltageStartReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespGetEpsVoltageStartReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespGetEpsVoltageStartReq* internal_default_instance() {
    return reinterpret_cast<const RespGetEpsVoltageStartReq*>(
               &_RespGetEpsVoltageStartReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(RespGetEpsVoltageStartReq& a, RespGetEpsVoltageStartReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RespGetEpsVoltageStartReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespGetEpsVoltageStartReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespGetEpsVoltageStartReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespGetEpsVoltageStartReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespGetEpsVoltageStartReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespGetEpsVoltageStartReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespGetEpsVoltageStartReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespGetEpsVoltageStartReq";
  }
  protected:
  explicit RespGetEpsVoltageStartReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespGetEpsVoltageStartReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class GetEpsVoltage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.GetEpsVoltage) */ {
 public:
  inline GetEpsVoltage() : GetEpsVoltage(nullptr) {}
  ~GetEpsVoltage() override;
  explicit constexpr GetEpsVoltage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEpsVoltage(const GetEpsVoltage& from);
  GetEpsVoltage(GetEpsVoltage&& from) noexcept
    : GetEpsVoltage() {
    *this = ::std::move(from);
  }

  inline GetEpsVoltage& operator=(const GetEpsVoltage& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEpsVoltage& operator=(GetEpsVoltage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEpsVoltage& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEpsVoltage* internal_default_instance() {
    return reinterpret_cast<const GetEpsVoltage*>(
               &_GetEpsVoltage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(GetEpsVoltage& a, GetEpsVoltage& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEpsVoltage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEpsVoltage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEpsVoltage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEpsVoltage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetEpsVoltage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetEpsVoltage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEpsVoltage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.GetEpsVoltage";
  }
  protected:
  explicit GetEpsVoltage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kEpsVoltageFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // float eps_voltage = 2;
  void clear_eps_voltage();
  float eps_voltage() const;
  void set_eps_voltage(float value);
  private:
  float _internal_eps_voltage() const;
  void _internal_set_eps_voltage(float value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.GetEpsVoltage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  float eps_voltage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class StartSesThermMgmntReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.StartSesThermMgmntReq) */ {
 public:
  inline StartSesThermMgmntReq() : StartSesThermMgmntReq(nullptr) {}
  ~StartSesThermMgmntReq() override;
  explicit constexpr StartSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartSesThermMgmntReq(const StartSesThermMgmntReq& from);
  StartSesThermMgmntReq(StartSesThermMgmntReq&& from) noexcept
    : StartSesThermMgmntReq() {
    *this = ::std::move(from);
  }

  inline StartSesThermMgmntReq& operator=(const StartSesThermMgmntReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartSesThermMgmntReq& operator=(StartSesThermMgmntReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartSesThermMgmntReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartSesThermMgmntReq* internal_default_instance() {
    return reinterpret_cast<const StartSesThermMgmntReq*>(
               &_StartSesThermMgmntReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(StartSesThermMgmntReq& a, StartSesThermMgmntReq& b) {
    a.Swap(&b);
  }
  inline void Swap(StartSesThermMgmntReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartSesThermMgmntReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartSesThermMgmntReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartSesThermMgmntReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StartSesThermMgmntReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const StartSesThermMgmntReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartSesThermMgmntReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.StartSesThermMgmntReq";
  }
  protected:
  explicit StartSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kHardwareIdFieldNumber = 2,
    kDurationFieldNumber = 3,
    kLowerThresholdFieldNumber = 4,
    kUpperThresholdFieldNumber = 5,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 hardware_id = 2;
  void clear_hardware_id();
  int32_t hardware_id() const;
  void set_hardware_id(int32_t value);
  private:
  int32_t _internal_hardware_id() const;
  void _internal_set_hardware_id(int32_t value);
  public:

  // int32 duration = 3;
  void clear_duration();
  int32_t duration() const;
  void set_duration(int32_t value);
  private:
  int32_t _internal_duration() const;
  void _internal_set_duration(int32_t value);
  public:

  // int32 lower_threshold = 4;
  void clear_lower_threshold();
  int32_t lower_threshold() const;
  void set_lower_threshold(int32_t value);
  private:
  int32_t _internal_lower_threshold() const;
  void _internal_set_lower_threshold(int32_t value);
  public:

  // int32 upper_threshold = 5;
  void clear_upper_threshold();
  int32_t upper_threshold() const;
  void set_upper_threshold(int32_t value);
  private:
  int32_t _internal_upper_threshold() const;
  void _internal_set_upper_threshold(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.StartSesThermMgmntReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t hardware_id_;
  int32_t duration_;
  int32_t lower_threshold_;
  int32_t upper_threshold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespStartSesThermMgmntReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespStartSesThermMgmntReq) */ {
 public:
  inline RespStartSesThermMgmntReq() : RespStartSesThermMgmntReq(nullptr) {}
  ~RespStartSesThermMgmntReq() override;
  explicit constexpr RespStartSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespStartSesThermMgmntReq(const RespStartSesThermMgmntReq& from);
  RespStartSesThermMgmntReq(RespStartSesThermMgmntReq&& from) noexcept
    : RespStartSesThermMgmntReq() {
    *this = ::std::move(from);
  }

  inline RespStartSesThermMgmntReq& operator=(const RespStartSesThermMgmntReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespStartSesThermMgmntReq& operator=(RespStartSesThermMgmntReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespStartSesThermMgmntReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespStartSesThermMgmntReq* internal_default_instance() {
    return reinterpret_cast<const RespStartSesThermMgmntReq*>(
               &_RespStartSesThermMgmntReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(RespStartSesThermMgmntReq& a, RespStartSesThermMgmntReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RespStartSesThermMgmntReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespStartSesThermMgmntReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespStartSesThermMgmntReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespStartSesThermMgmntReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespStartSesThermMgmntReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespStartSesThermMgmntReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespStartSesThermMgmntReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespStartSesThermMgmntReq";
  }
  protected:
  explicit RespStartSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespStartSesThermMgmntReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class StopSesThermMgmntReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.StopSesThermMgmntReq) */ {
 public:
  inline StopSesThermMgmntReq() : StopSesThermMgmntReq(nullptr) {}
  ~StopSesThermMgmntReq() override;
  explicit constexpr StopSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StopSesThermMgmntReq(const StopSesThermMgmntReq& from);
  StopSesThermMgmntReq(StopSesThermMgmntReq&& from) noexcept
    : StopSesThermMgmntReq() {
    *this = ::std::move(from);
  }

  inline StopSesThermMgmntReq& operator=(const StopSesThermMgmntReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopSesThermMgmntReq& operator=(StopSesThermMgmntReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopSesThermMgmntReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopSesThermMgmntReq* internal_default_instance() {
    return reinterpret_cast<const StopSesThermMgmntReq*>(
               &_StopSesThermMgmntReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(StopSesThermMgmntReq& a, StopSesThermMgmntReq& b) {
    a.Swap(&b);
  }
  inline void Swap(StopSesThermMgmntReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopSesThermMgmntReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopSesThermMgmntReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopSesThermMgmntReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StopSesThermMgmntReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const StopSesThermMgmntReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopSesThermMgmntReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.StopSesThermMgmntReq";
  }
  protected:
  explicit StopSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kHardwareIdFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 hardware_id = 2;
  void clear_hardware_id();
  int32_t hardware_id() const;
  void set_hardware_id(int32_t value);
  private:
  int32_t _internal_hardware_id() const;
  void _internal_set_hardware_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.StopSesThermMgmntReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t hardware_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespStopSesThermMgmntReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespStopSesThermMgmntReq) */ {
 public:
  inline RespStopSesThermMgmntReq() : RespStopSesThermMgmntReq(nullptr) {}
  ~RespStopSesThermMgmntReq() override;
  explicit constexpr RespStopSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespStopSesThermMgmntReq(const RespStopSesThermMgmntReq& from);
  RespStopSesThermMgmntReq(RespStopSesThermMgmntReq&& from) noexcept
    : RespStopSesThermMgmntReq() {
    *this = ::std::move(from);
  }

  inline RespStopSesThermMgmntReq& operator=(const RespStopSesThermMgmntReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespStopSesThermMgmntReq& operator=(RespStopSesThermMgmntReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespStopSesThermMgmntReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespStopSesThermMgmntReq* internal_default_instance() {
    return reinterpret_cast<const RespStopSesThermMgmntReq*>(
               &_RespStopSesThermMgmntReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(RespStopSesThermMgmntReq& a, RespStopSesThermMgmntReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RespStopSesThermMgmntReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespStopSesThermMgmntReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespStopSesThermMgmntReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespStopSesThermMgmntReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespStopSesThermMgmntReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespStopSesThermMgmntReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespStopSesThermMgmntReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespStopSesThermMgmntReq";
  }
  protected:
  explicit RespStopSesThermMgmntReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kReqStatusFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 req_status = 2;
  void clear_req_status();
  int32_t req_status() const;
  void set_req_status(int32_t value);
  private:
  int32_t _internal_req_status() const;
  void _internal_set_req_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespStopSesThermMgmntReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t req_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class SesTempReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.SesTempReq) */ {
 public:
  inline SesTempReq() : SesTempReq(nullptr) {}
  ~SesTempReq() override;
  explicit constexpr SesTempReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SesTempReq(const SesTempReq& from);
  SesTempReq(SesTempReq&& from) noexcept
    : SesTempReq() {
    *this = ::std::move(from);
  }

  inline SesTempReq& operator=(const SesTempReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SesTempReq& operator=(SesTempReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SesTempReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SesTempReq* internal_default_instance() {
    return reinterpret_cast<const SesTempReq*>(
               &_SesTempReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(SesTempReq& a, SesTempReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SesTempReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SesTempReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SesTempReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SesTempReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SesTempReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SesTempReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SesTempReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.SesTempReq";
  }
  protected:
  explicit SesTempReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kHardwareIdFieldNumber = 2,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 hardware_id = 2;
  void clear_hardware_id();
  int32_t hardware_id() const;
  void set_hardware_id(int32_t value);
  private:
  int32_t _internal_hardware_id() const;
  void _internal_set_hardware_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.SesTempReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t hardware_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class RespSesTempReqParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.RespSesTempReqParams) */ {
 public:
  inline RespSesTempReqParams() : RespSesTempReqParams(nullptr) {}
  ~RespSesTempReqParams() override;
  explicit constexpr RespSesTempReqParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespSesTempReqParams(const RespSesTempReqParams& from);
  RespSesTempReqParams(RespSesTempReqParams&& from) noexcept
    : RespSesTempReqParams() {
    *this = ::std::move(from);
  }

  inline RespSesTempReqParams& operator=(const RespSesTempReqParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespSesTempReqParams& operator=(RespSesTempReqParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespSesTempReqParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespSesTempReqParams* internal_default_instance() {
    return reinterpret_cast<const RespSesTempReqParams*>(
               &_RespSesTempReqParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(RespSesTempReqParams& a, RespSesTempReqParams& b) {
    a.Swap(&b);
  }
  inline void Swap(RespSesTempReqParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespSesTempReqParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespSesTempReqParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespSesTempReqParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespSesTempReqParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespSesTempReqParams& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespSesTempReqParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.RespSesTempReqParams";
  }
  protected:
  explicit RespSesTempReqParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kTempFieldNumber = 2,
    kHeaterPwrStatusFieldNumber = 3,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 temp = 2;
  void clear_temp();
  int32_t temp() const;
  void set_temp(int32_t value);
  private:
  int32_t _internal_temp() const;
  void _internal_set_temp(int32_t value);
  public:

  // int32 heater_pwr_status = 3;
  void clear_heater_pwr_status();
  int32_t heater_pwr_status() const;
  void set_heater_pwr_status(int32_t value);
  private:
  int32_t _internal_heater_pwr_status() const;
  void _internal_set_heater_pwr_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.RespSesTempReqParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t temp_;
  int32_t heater_pwr_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class SesThermalStatusNtf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.SesThermalStatusNtf) */ {
 public:
  inline SesThermalStatusNtf() : SesThermalStatusNtf(nullptr) {}
  ~SesThermalStatusNtf() override;
  explicit constexpr SesThermalStatusNtf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SesThermalStatusNtf(const SesThermalStatusNtf& from);
  SesThermalStatusNtf(SesThermalStatusNtf&& from) noexcept
    : SesThermalStatusNtf() {
    *this = ::std::move(from);
  }

  inline SesThermalStatusNtf& operator=(const SesThermalStatusNtf& from) {
    CopyFrom(from);
    return *this;
  }
  inline SesThermalStatusNtf& operator=(SesThermalStatusNtf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SesThermalStatusNtf& default_instance() {
    return *internal_default_instance();
  }
  static inline const SesThermalStatusNtf* internal_default_instance() {
    return reinterpret_cast<const SesThermalStatusNtf*>(
               &_SesThermalStatusNtf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(SesThermalStatusNtf& a, SesThermalStatusNtf& b) {
    a.Swap(&b);
  }
  inline void Swap(SesThermalStatusNtf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SesThermalStatusNtf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SesThermalStatusNtf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SesThermalStatusNtf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SesThermalStatusNtf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SesThermalStatusNtf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SesThermalStatusNtf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.SesThermalStatusNtf";
  }
  protected:
  explicit SesThermalStatusNtf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kHeaterPwrStatusFieldNumber = 2,
    kTempFieldNumber = 3,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // int32 heater_pwr_status = 2;
  void clear_heater_pwr_status();
  int32_t heater_pwr_status() const;
  void set_heater_pwr_status(int32_t value);
  private:
  int32_t _internal_heater_pwr_status() const;
  void _internal_set_heater_pwr_status(int32_t value);
  public:

  // int32 temp = 3;
  void clear_temp();
  int32_t temp() const;
  void set_temp(int32_t value);
  private:
  int32_t _internal_temp() const;
  void _internal_set_temp(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.SesThermalStatusNtf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  int32_t heater_pwr_status_;
  int32_t temp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AntarisCorrelationId final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.AntarisCorrelationId) */ {
 public:
  inline AntarisCorrelationId() : AntarisCorrelationId(nullptr) {}
  ~AntarisCorrelationId() override;
  explicit constexpr AntarisCorrelationId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AntarisCorrelationId(const AntarisCorrelationId& from);
  AntarisCorrelationId(AntarisCorrelationId&& from) noexcept
    : AntarisCorrelationId() {
    *this = ::std::move(from);
  }

  inline AntarisCorrelationId& operator=(const AntarisCorrelationId& from) {
    CopyFrom(from);
    return *this;
  }
  inline AntarisCorrelationId& operator=(AntarisCorrelationId&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AntarisCorrelationId& default_instance() {
    return *internal_default_instance();
  }
  static inline const AntarisCorrelationId* internal_default_instance() {
    return reinterpret_cast<const AntarisCorrelationId*>(
               &_AntarisCorrelationId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(AntarisCorrelationId& a, AntarisCorrelationId& b) {
    a.Swap(&b);
  }
  inline void Swap(AntarisCorrelationId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AntarisCorrelationId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AntarisCorrelationId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AntarisCorrelationId>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AntarisCorrelationId& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AntarisCorrelationId& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AntarisCorrelationId* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.AntarisCorrelationId";
  }
  protected:
  explicit AntarisCorrelationId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
  };
  // int32 correlation_id = 1;
  void clear_correlation_id();
  int32_t correlation_id() const;
  void set_correlation_id(int32_t value);
  private:
  int32_t _internal_correlation_id() const;
  void _internal_set_correlation_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.AntarisCorrelationId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t correlation_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AntarisReturnType final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:antaris_api_peer_to_peer.AntarisReturnType) */ {
 public:
  inline AntarisReturnType() : AntarisReturnType(nullptr) {}
  ~AntarisReturnType() override;
  explicit constexpr AntarisReturnType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AntarisReturnType(const AntarisReturnType& from);
  AntarisReturnType(AntarisReturnType&& from) noexcept
    : AntarisReturnType() {
    *this = ::std::move(from);
  }

  inline AntarisReturnType& operator=(const AntarisReturnType& from) {
    CopyFrom(from);
    return *this;
  }
  inline AntarisReturnType& operator=(AntarisReturnType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AntarisReturnType& default_instance() {
    return *internal_default_instance();
  }
  static inline const AntarisReturnType* internal_default_instance() {
    return reinterpret_cast<const AntarisReturnType*>(
               &_AntarisReturnType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(AntarisReturnType& a, AntarisReturnType& b) {
    a.Swap(&b);
  }
  inline void Swap(AntarisReturnType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AntarisReturnType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AntarisReturnType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AntarisReturnType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AntarisReturnType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AntarisReturnType& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AntarisReturnType* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "antaris_api_peer_to_peer.AntarisReturnType";
  }
  protected:
  explicit AntarisReturnType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnCodeFieldNumber = 1,
  };
  // .antaris_api_peer_to_peer.AntarisReturnCode return_code = 1;
  void clear_return_code();
  ::antaris_api_peer_to_peer::AntarisReturnCode return_code() const;
  void set_return_code(::antaris_api_peer_to_peer::AntarisReturnCode value);
  private:
  ::antaris_api_peer_to_peer::AntarisReturnCode _internal_return_code() const;
  void _internal_set_return_code(::antaris_api_peer_to_peer::AntarisReturnCode value);
  public:

  // @@protoc_insertion_point(class_scope:antaris_api_peer_to_peer.AntarisReturnType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int return_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_defs_2fgen_2fproto_2fantaris_5fapi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AntarisSdkVersion

// int32 major = 1;
inline void AntarisSdkVersion::clear_major() {
  major_ = 0;
}
inline int32_t AntarisSdkVersion::_internal_major() const {
  return major_;
}
inline int32_t AntarisSdkVersion::major() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.AntarisSdkVersion.major)
  return _internal_major();
}
inline void AntarisSdkVersion::_internal_set_major(int32_t value) {
  
  major_ = value;
}
inline void AntarisSdkVersion::set_major(int32_t value) {
  _internal_set_major(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.AntarisSdkVersion.major)
}

// int32 minor = 2;
inline void AntarisSdkVersion::clear_minor() {
  minor_ = 0;
}
inline int32_t AntarisSdkVersion::_internal_minor() const {
  return minor_;
}
inline int32_t AntarisSdkVersion::minor() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.AntarisSdkVersion.minor)
  return _internal_minor();
}
inline void AntarisSdkVersion::_internal_set_minor(int32_t value) {
  
  minor_ = value;
}
inline void AntarisSdkVersion::set_minor(int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.AntarisSdkVersion.minor)
}

// int32 patch = 3;
inline void AntarisSdkVersion::clear_patch() {
  patch_ = 0;
}
inline int32_t AntarisSdkVersion::_internal_patch() const {
  return patch_;
}
inline int32_t AntarisSdkVersion::patch() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.AntarisSdkVersion.patch)
  return _internal_patch();
}
inline void AntarisSdkVersion::_internal_set_patch(int32_t value) {
  
  patch_ = value;
}
inline void AntarisSdkVersion::set_patch(int32_t value) {
  _internal_set_patch(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.AntarisSdkVersion.patch)
}

// -------------------------------------------------------------------

// ReqRegisterParams

// int32 correlation_id = 1;
inline void ReqRegisterParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqRegisterParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqRegisterParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqRegisterParams.correlation_id)
  return _internal_correlation_id();
}
inline void ReqRegisterParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqRegisterParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqRegisterParams.correlation_id)
}

// int32 health_check_fail_action = 2;
inline void ReqRegisterParams::clear_health_check_fail_action() {
  health_check_fail_action_ = 0;
}
inline int32_t ReqRegisterParams::_internal_health_check_fail_action() const {
  return health_check_fail_action_;
}
inline int32_t ReqRegisterParams::health_check_fail_action() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqRegisterParams.health_check_fail_action)
  return _internal_health_check_fail_action();
}
inline void ReqRegisterParams::_internal_set_health_check_fail_action(int32_t value) {
  
  health_check_fail_action_ = value;
}
inline void ReqRegisterParams::set_health_check_fail_action(int32_t value) {
  _internal_set_health_check_fail_action(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqRegisterParams.health_check_fail_action)
}

// .antaris_api_peer_to_peer.AntarisSdkVersion sdk_version = 3;
inline bool ReqRegisterParams::_internal_has_sdk_version() const {
  return this != internal_default_instance() && sdk_version_ != nullptr;
}
inline bool ReqRegisterParams::has_sdk_version() const {
  return _internal_has_sdk_version();
}
inline void ReqRegisterParams::clear_sdk_version() {
  if (GetArenaForAllocation() == nullptr && sdk_version_ != nullptr) {
    delete sdk_version_;
  }
  sdk_version_ = nullptr;
}
inline const ::antaris_api_peer_to_peer::AntarisSdkVersion& ReqRegisterParams::_internal_sdk_version() const {
  const ::antaris_api_peer_to_peer::AntarisSdkVersion* p = sdk_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::antaris_api_peer_to_peer::AntarisSdkVersion&>(
      ::antaris_api_peer_to_peer::_AntarisSdkVersion_default_instance_);
}
inline const ::antaris_api_peer_to_peer::AntarisSdkVersion& ReqRegisterParams::sdk_version() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqRegisterParams.sdk_version)
  return _internal_sdk_version();
}
inline void ReqRegisterParams::unsafe_arena_set_allocated_sdk_version(
    ::antaris_api_peer_to_peer::AntarisSdkVersion* sdk_version) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sdk_version_);
  }
  sdk_version_ = sdk_version;
  if (sdk_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:antaris_api_peer_to_peer.ReqRegisterParams.sdk_version)
}
inline ::antaris_api_peer_to_peer::AntarisSdkVersion* ReqRegisterParams::release_sdk_version() {
  
  ::antaris_api_peer_to_peer::AntarisSdkVersion* temp = sdk_version_;
  sdk_version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::antaris_api_peer_to_peer::AntarisSdkVersion* ReqRegisterParams::unsafe_arena_release_sdk_version() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.ReqRegisterParams.sdk_version)
  
  ::antaris_api_peer_to_peer::AntarisSdkVersion* temp = sdk_version_;
  sdk_version_ = nullptr;
  return temp;
}
inline ::antaris_api_peer_to_peer::AntarisSdkVersion* ReqRegisterParams::_internal_mutable_sdk_version() {
  
  if (sdk_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::antaris_api_peer_to_peer::AntarisSdkVersion>(GetArenaForAllocation());
    sdk_version_ = p;
  }
  return sdk_version_;
}
inline ::antaris_api_peer_to_peer::AntarisSdkVersion* ReqRegisterParams::mutable_sdk_version() {
  ::antaris_api_peer_to_peer::AntarisSdkVersion* _msg = _internal_mutable_sdk_version();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.ReqRegisterParams.sdk_version)
  return _msg;
}
inline void ReqRegisterParams::set_allocated_sdk_version(::antaris_api_peer_to_peer::AntarisSdkVersion* sdk_version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete sdk_version_;
  }
  if (sdk_version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::antaris_api_peer_to_peer::AntarisSdkVersion>::GetOwningArena(sdk_version);
    if (message_arena != submessage_arena) {
      sdk_version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sdk_version, submessage_arena);
    }
    
  } else {
    
  }
  sdk_version_ = sdk_version;
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.ReqRegisterParams.sdk_version)
}

// -------------------------------------------------------------------

// RespRegisterParams

// int32 correlation_id = 1;
inline void RespRegisterParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespRegisterParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespRegisterParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespRegisterParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespRegisterParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespRegisterParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespRegisterParams.correlation_id)
}

// int32 req_status = 2;
inline void RespRegisterParams::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespRegisterParams::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespRegisterParams::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespRegisterParams.req_status)
  return _internal_req_status();
}
inline void RespRegisterParams::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespRegisterParams::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespRegisterParams.req_status)
}

// string auth_token = 3;
inline void RespRegisterParams::clear_auth_token() {
  auth_token_.ClearToEmpty();
}
inline const std::string& RespRegisterParams::auth_token() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespRegisterParams.auth_token)
  return _internal_auth_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RespRegisterParams::set_auth_token(ArgT0&& arg0, ArgT... args) {
 
 auth_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespRegisterParams.auth_token)
}
inline std::string* RespRegisterParams::mutable_auth_token() {
  std::string* _s = _internal_mutable_auth_token();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.RespRegisterParams.auth_token)
  return _s;
}
inline const std::string& RespRegisterParams::_internal_auth_token() const {
  return auth_token_.Get();
}
inline void RespRegisterParams::_internal_set_auth_token(const std::string& value) {
  
  auth_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RespRegisterParams::_internal_mutable_auth_token() {
  
  return auth_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RespRegisterParams::release_auth_token() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.RespRegisterParams.auth_token)
  return auth_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RespRegisterParams::set_allocated_auth_token(std::string* auth_token) {
  if (auth_token != nullptr) {
    
  } else {
    
  }
  auth_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_token,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (auth_token_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    auth_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.RespRegisterParams.auth_token)
}

// -------------------------------------------------------------------

// ReqGetCurrentLocationParams

// int32 correlation_id = 1;
inline void ReqGetCurrentLocationParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqGetCurrentLocationParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqGetCurrentLocationParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGetCurrentLocationParams.correlation_id)
  return _internal_correlation_id();
}
inline void ReqGetCurrentLocationParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqGetCurrentLocationParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGetCurrentLocationParams.correlation_id)
}

// -------------------------------------------------------------------

// RespGetCurrentLocationParams

// int32 correlation_id = 1;
inline void RespGetCurrentLocationParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespGetCurrentLocationParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespGetCurrentLocationParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespGetCurrentLocationParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespGetCurrentLocationParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.correlation_id)
}

// int32 req_status = 2;
inline void RespGetCurrentLocationParams::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespGetCurrentLocationParams::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespGetCurrentLocationParams::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.req_status)
  return _internal_req_status();
}
inline void RespGetCurrentLocationParams::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespGetCurrentLocationParams::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.req_status)
}

// double latitude = 3;
inline void RespGetCurrentLocationParams::clear_latitude() {
  latitude_ = 0;
}
inline double RespGetCurrentLocationParams::_internal_latitude() const {
  return latitude_;
}
inline double RespGetCurrentLocationParams::latitude() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.latitude)
  return _internal_latitude();
}
inline void RespGetCurrentLocationParams::_internal_set_latitude(double value) {
  
  latitude_ = value;
}
inline void RespGetCurrentLocationParams::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.latitude)
}

// double longitude = 4;
inline void RespGetCurrentLocationParams::clear_longitude() {
  longitude_ = 0;
}
inline double RespGetCurrentLocationParams::_internal_longitude() const {
  return longitude_;
}
inline double RespGetCurrentLocationParams::longitude() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.longitude)
  return _internal_longitude();
}
inline void RespGetCurrentLocationParams::_internal_set_longitude(double value) {
  
  longitude_ = value;
}
inline void RespGetCurrentLocationParams::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.longitude)
}

// double altitude = 5;
inline void RespGetCurrentLocationParams::clear_altitude() {
  altitude_ = 0;
}
inline double RespGetCurrentLocationParams::_internal_altitude() const {
  return altitude_;
}
inline double RespGetCurrentLocationParams::altitude() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.altitude)
  return _internal_altitude();
}
inline void RespGetCurrentLocationParams::_internal_set_altitude(double value) {
  
  altitude_ = value;
}
inline void RespGetCurrentLocationParams::set_altitude(double value) {
  _internal_set_altitude(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.altitude)
}

// float sd_latitude = 6;
inline void RespGetCurrentLocationParams::clear_sd_latitude() {
  sd_latitude_ = 0;
}
inline float RespGetCurrentLocationParams::_internal_sd_latitude() const {
  return sd_latitude_;
}
inline float RespGetCurrentLocationParams::sd_latitude() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.sd_latitude)
  return _internal_sd_latitude();
}
inline void RespGetCurrentLocationParams::_internal_set_sd_latitude(float value) {
  
  sd_latitude_ = value;
}
inline void RespGetCurrentLocationParams::set_sd_latitude(float value) {
  _internal_set_sd_latitude(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.sd_latitude)
}

// float sd_longitude = 7;
inline void RespGetCurrentLocationParams::clear_sd_longitude() {
  sd_longitude_ = 0;
}
inline float RespGetCurrentLocationParams::_internal_sd_longitude() const {
  return sd_longitude_;
}
inline float RespGetCurrentLocationParams::sd_longitude() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.sd_longitude)
  return _internal_sd_longitude();
}
inline void RespGetCurrentLocationParams::_internal_set_sd_longitude(float value) {
  
  sd_longitude_ = value;
}
inline void RespGetCurrentLocationParams::set_sd_longitude(float value) {
  _internal_set_sd_longitude(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.sd_longitude)
}

// float sd_altitude = 8;
inline void RespGetCurrentLocationParams::clear_sd_altitude() {
  sd_altitude_ = 0;
}
inline float RespGetCurrentLocationParams::_internal_sd_altitude() const {
  return sd_altitude_;
}
inline float RespGetCurrentLocationParams::sd_altitude() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.sd_altitude)
  return _internal_sd_altitude();
}
inline void RespGetCurrentLocationParams::_internal_set_sd_altitude(float value) {
  
  sd_altitude_ = value;
}
inline void RespGetCurrentLocationParams::set_sd_altitude(float value) {
  _internal_set_sd_altitude(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.sd_altitude)
}

// int64 determined_at = 9;
inline void RespGetCurrentLocationParams::clear_determined_at() {
  determined_at_ = int64_t{0};
}
inline int64_t RespGetCurrentLocationParams::_internal_determined_at() const {
  return determined_at_;
}
inline int64_t RespGetCurrentLocationParams::determined_at() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetCurrentLocationParams.determined_at)
  return _internal_determined_at();
}
inline void RespGetCurrentLocationParams::_internal_set_determined_at(int64_t value) {
  
  determined_at_ = value;
}
inline void RespGetCurrentLocationParams::set_determined_at(int64_t value) {
  _internal_set_determined_at(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetCurrentLocationParams.determined_at)
}

// -------------------------------------------------------------------

// ReqStageFileDownloadParams

// int32 correlation_id = 1;
inline void ReqStageFileDownloadParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqStageFileDownloadParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqStageFileDownloadParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqStageFileDownloadParams.correlation_id)
  return _internal_correlation_id();
}
inline void ReqStageFileDownloadParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqStageFileDownloadParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqStageFileDownloadParams.correlation_id)
}

// string file_path = 2;
inline void ReqStageFileDownloadParams::clear_file_path() {
  file_path_.ClearToEmpty();
}
inline const std::string& ReqStageFileDownloadParams::file_path() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqStageFileDownloadParams.file_path)
  return _internal_file_path();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ReqStageFileDownloadParams::set_file_path(ArgT0&& arg0, ArgT... args) {
 
 file_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqStageFileDownloadParams.file_path)
}
inline std::string* ReqStageFileDownloadParams::mutable_file_path() {
  std::string* _s = _internal_mutable_file_path();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.ReqStageFileDownloadParams.file_path)
  return _s;
}
inline const std::string& ReqStageFileDownloadParams::_internal_file_path() const {
  return file_path_.Get();
}
inline void ReqStageFileDownloadParams::_internal_set_file_path(const std::string& value) {
  
  file_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ReqStageFileDownloadParams::_internal_mutable_file_path() {
  
  return file_path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ReqStageFileDownloadParams::release_file_path() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.ReqStageFileDownloadParams.file_path)
  return file_path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ReqStageFileDownloadParams::set_allocated_file_path(std::string* file_path) {
  if (file_path != nullptr) {
    
  } else {
    
  }
  file_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_path,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_path_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.ReqStageFileDownloadParams.file_path)
}

// -------------------------------------------------------------------

// RespStageFileDownloadParams

// int32 correlation_id = 1;
inline void RespStageFileDownloadParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespStageFileDownloadParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespStageFileDownloadParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespStageFileDownloadParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespStageFileDownloadParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespStageFileDownloadParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespStageFileDownloadParams.correlation_id)
}

// int32 req_status = 2;
inline void RespStageFileDownloadParams::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespStageFileDownloadParams::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespStageFileDownloadParams::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespStageFileDownloadParams.req_status)
  return _internal_req_status();
}
inline void RespStageFileDownloadParams::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespStageFileDownloadParams::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespStageFileDownloadParams.req_status)
}

// -------------------------------------------------------------------

// ReqPayloadPowerControlParams

// int32 correlation_id = 1;
inline void ReqPayloadPowerControlParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqPayloadPowerControlParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqPayloadPowerControlParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqPayloadPowerControlParams.correlation_id)
  return _internal_correlation_id();
}
inline void ReqPayloadPowerControlParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqPayloadPowerControlParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqPayloadPowerControlParams.correlation_id)
}

// int32 power_operation = 2;
inline void ReqPayloadPowerControlParams::clear_power_operation() {
  power_operation_ = 0;
}
inline int32_t ReqPayloadPowerControlParams::_internal_power_operation() const {
  return power_operation_;
}
inline int32_t ReqPayloadPowerControlParams::power_operation() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqPayloadPowerControlParams.power_operation)
  return _internal_power_operation();
}
inline void ReqPayloadPowerControlParams::_internal_set_power_operation(int32_t value) {
  
  power_operation_ = value;
}
inline void ReqPayloadPowerControlParams::set_power_operation(int32_t value) {
  _internal_set_power_operation(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqPayloadPowerControlParams.power_operation)
}

// -------------------------------------------------------------------

// RespPayloadPowerControlParams

// int32 correlation_id = 1;
inline void RespPayloadPowerControlParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespPayloadPowerControlParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespPayloadPowerControlParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespPayloadPowerControlParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespPayloadPowerControlParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespPayloadPowerControlParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespPayloadPowerControlParams.correlation_id)
}

// int32 req_status = 2;
inline void RespPayloadPowerControlParams::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespPayloadPowerControlParams::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespPayloadPowerControlParams::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespPayloadPowerControlParams.req_status)
  return _internal_req_status();
}
inline void RespPayloadPowerControlParams::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespPayloadPowerControlParams::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespPayloadPowerControlParams.req_status)
}

// -------------------------------------------------------------------

// RespShutdownParams

// int32 correlation_id = 1;
inline void RespShutdownParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespShutdownParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespShutdownParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespShutdownParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespShutdownParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespShutdownParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespShutdownParams.correlation_id)
}

// int32 req_status = 2;
inline void RespShutdownParams::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespShutdownParams::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespShutdownParams::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespShutdownParams.req_status)
  return _internal_req_status();
}
inline void RespShutdownParams::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespShutdownParams::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespShutdownParams.req_status)
}

// -------------------------------------------------------------------

// RespHealthCheckParams

// int32 correlation_id = 1;
inline void RespHealthCheckParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespHealthCheckParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespHealthCheckParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespHealthCheckParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespHealthCheckParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespHealthCheckParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespHealthCheckParams.correlation_id)
}

// int32 application_state = 2;
inline void RespHealthCheckParams::clear_application_state() {
  application_state_ = 0;
}
inline int32_t RespHealthCheckParams::_internal_application_state() const {
  return application_state_;
}
inline int32_t RespHealthCheckParams::application_state() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespHealthCheckParams.application_state)
  return _internal_application_state();
}
inline void RespHealthCheckParams::_internal_set_application_state(int32_t value) {
  
  application_state_ = value;
}
inline void RespHealthCheckParams::set_application_state(int32_t value) {
  _internal_set_application_state(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespHealthCheckParams.application_state)
}

// int32 reqs_to_pc_in_err_cnt = 3;
inline void RespHealthCheckParams::clear_reqs_to_pc_in_err_cnt() {
  reqs_to_pc_in_err_cnt_ = 0;
}
inline int32_t RespHealthCheckParams::_internal_reqs_to_pc_in_err_cnt() const {
  return reqs_to_pc_in_err_cnt_;
}
inline int32_t RespHealthCheckParams::reqs_to_pc_in_err_cnt() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespHealthCheckParams.reqs_to_pc_in_err_cnt)
  return _internal_reqs_to_pc_in_err_cnt();
}
inline void RespHealthCheckParams::_internal_set_reqs_to_pc_in_err_cnt(int32_t value) {
  
  reqs_to_pc_in_err_cnt_ = value;
}
inline void RespHealthCheckParams::set_reqs_to_pc_in_err_cnt(int32_t value) {
  _internal_set_reqs_to_pc_in_err_cnt(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespHealthCheckParams.reqs_to_pc_in_err_cnt)
}

// int32 resps_to_pc_in_err_cnt = 4;
inline void RespHealthCheckParams::clear_resps_to_pc_in_err_cnt() {
  resps_to_pc_in_err_cnt_ = 0;
}
inline int32_t RespHealthCheckParams::_internal_resps_to_pc_in_err_cnt() const {
  return resps_to_pc_in_err_cnt_;
}
inline int32_t RespHealthCheckParams::resps_to_pc_in_err_cnt() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespHealthCheckParams.resps_to_pc_in_err_cnt)
  return _internal_resps_to_pc_in_err_cnt();
}
inline void RespHealthCheckParams::_internal_set_resps_to_pc_in_err_cnt(int32_t value) {
  
  resps_to_pc_in_err_cnt_ = value;
}
inline void RespHealthCheckParams::set_resps_to_pc_in_err_cnt(int32_t value) {
  _internal_set_resps_to_pc_in_err_cnt(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespHealthCheckParams.resps_to_pc_in_err_cnt)
}

// -------------------------------------------------------------------

// StartSequenceParams

// int32 correlation_id = 1;
inline void StartSequenceParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t StartSequenceParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t StartSequenceParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSequenceParams.correlation_id)
  return _internal_correlation_id();
}
inline void StartSequenceParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void StartSequenceParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSequenceParams.correlation_id)
}

// string sequence_id = 2;
inline void StartSequenceParams::clear_sequence_id() {
  sequence_id_.ClearToEmpty();
}
inline const std::string& StartSequenceParams::sequence_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSequenceParams.sequence_id)
  return _internal_sequence_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void StartSequenceParams::set_sequence_id(ArgT0&& arg0, ArgT... args) {
 
 sequence_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSequenceParams.sequence_id)
}
inline std::string* StartSequenceParams::mutable_sequence_id() {
  std::string* _s = _internal_mutable_sequence_id();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.StartSequenceParams.sequence_id)
  return _s;
}
inline const std::string& StartSequenceParams::_internal_sequence_id() const {
  return sequence_id_.Get();
}
inline void StartSequenceParams::_internal_set_sequence_id(const std::string& value) {
  
  sequence_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* StartSequenceParams::_internal_mutable_sequence_id() {
  
  return sequence_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* StartSequenceParams::release_sequence_id() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.StartSequenceParams.sequence_id)
  return sequence_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void StartSequenceParams::set_allocated_sequence_id(std::string* sequence_id) {
  if (sequence_id != nullptr) {
    
  } else {
    
  }
  sequence_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sequence_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (sequence_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    sequence_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.StartSequenceParams.sequence_id)
}

// string sequence_params = 3;
inline void StartSequenceParams::clear_sequence_params() {
  sequence_params_.ClearToEmpty();
}
inline const std::string& StartSequenceParams::sequence_params() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSequenceParams.sequence_params)
  return _internal_sequence_params();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void StartSequenceParams::set_sequence_params(ArgT0&& arg0, ArgT... args) {
 
 sequence_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSequenceParams.sequence_params)
}
inline std::string* StartSequenceParams::mutable_sequence_params() {
  std::string* _s = _internal_mutable_sequence_params();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.StartSequenceParams.sequence_params)
  return _s;
}
inline const std::string& StartSequenceParams::_internal_sequence_params() const {
  return sequence_params_.Get();
}
inline void StartSequenceParams::_internal_set_sequence_params(const std::string& value) {
  
  sequence_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* StartSequenceParams::_internal_mutable_sequence_params() {
  
  return sequence_params_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* StartSequenceParams::release_sequence_params() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.StartSequenceParams.sequence_params)
  return sequence_params_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void StartSequenceParams::set_allocated_sequence_params(std::string* sequence_params) {
  if (sequence_params != nullptr) {
    
  } else {
    
  }
  sequence_params_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sequence_params,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (sequence_params_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    sequence_params_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.StartSequenceParams.sequence_params)
}

// int64 scheduled_deadline = 4;
inline void StartSequenceParams::clear_scheduled_deadline() {
  scheduled_deadline_ = int64_t{0};
}
inline int64_t StartSequenceParams::_internal_scheduled_deadline() const {
  return scheduled_deadline_;
}
inline int64_t StartSequenceParams::scheduled_deadline() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSequenceParams.scheduled_deadline)
  return _internal_scheduled_deadline();
}
inline void StartSequenceParams::_internal_set_scheduled_deadline(int64_t value) {
  
  scheduled_deadline_ = value;
}
inline void StartSequenceParams::set_scheduled_deadline(int64_t value) {
  _internal_set_scheduled_deadline(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSequenceParams.scheduled_deadline)
}

// -------------------------------------------------------------------

// ShutdownParams

// int32 correlation_id = 1;
inline void ShutdownParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ShutdownParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ShutdownParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ShutdownParams.correlation_id)
  return _internal_correlation_id();
}
inline void ShutdownParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ShutdownParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ShutdownParams.correlation_id)
}

// int32 grace_time = 2;
inline void ShutdownParams::clear_grace_time() {
  grace_time_ = 0;
}
inline int32_t ShutdownParams::_internal_grace_time() const {
  return grace_time_;
}
inline int32_t ShutdownParams::grace_time() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ShutdownParams.grace_time)
  return _internal_grace_time();
}
inline void ShutdownParams::_internal_set_grace_time(int32_t value) {
  
  grace_time_ = value;
}
inline void ShutdownParams::set_grace_time(int32_t value) {
  _internal_set_grace_time(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ShutdownParams.grace_time)
}

// -------------------------------------------------------------------

// HealthCheckParams

// int32 correlation_id = 1;
inline void HealthCheckParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t HealthCheckParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t HealthCheckParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.HealthCheckParams.correlation_id)
  return _internal_correlation_id();
}
inline void HealthCheckParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void HealthCheckParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.HealthCheckParams.correlation_id)
}

// int32 application_state = 2;
inline void HealthCheckParams::clear_application_state() {
  application_state_ = 0;
}
inline int32_t HealthCheckParams::_internal_application_state() const {
  return application_state_;
}
inline int32_t HealthCheckParams::application_state() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.HealthCheckParams.application_state)
  return _internal_application_state();
}
inline void HealthCheckParams::_internal_set_application_state(int32_t value) {
  
  application_state_ = value;
}
inline void HealthCheckParams::set_application_state(int32_t value) {
  _internal_set_application_state(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.HealthCheckParams.application_state)
}

// int32 reqs_to_pc_in_err_cnt = 3;
inline void HealthCheckParams::clear_reqs_to_pc_in_err_cnt() {
  reqs_to_pc_in_err_cnt_ = 0;
}
inline int32_t HealthCheckParams::_internal_reqs_to_pc_in_err_cnt() const {
  return reqs_to_pc_in_err_cnt_;
}
inline int32_t HealthCheckParams::reqs_to_pc_in_err_cnt() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.HealthCheckParams.reqs_to_pc_in_err_cnt)
  return _internal_reqs_to_pc_in_err_cnt();
}
inline void HealthCheckParams::_internal_set_reqs_to_pc_in_err_cnt(int32_t value) {
  
  reqs_to_pc_in_err_cnt_ = value;
}
inline void HealthCheckParams::set_reqs_to_pc_in_err_cnt(int32_t value) {
  _internal_set_reqs_to_pc_in_err_cnt(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.HealthCheckParams.reqs_to_pc_in_err_cnt)
}

// int32 resps_to_pc_in_err_cnt = 4;
inline void HealthCheckParams::clear_resps_to_pc_in_err_cnt() {
  resps_to_pc_in_err_cnt_ = 0;
}
inline int32_t HealthCheckParams::_internal_resps_to_pc_in_err_cnt() const {
  return resps_to_pc_in_err_cnt_;
}
inline int32_t HealthCheckParams::resps_to_pc_in_err_cnt() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.HealthCheckParams.resps_to_pc_in_err_cnt)
  return _internal_resps_to_pc_in_err_cnt();
}
inline void HealthCheckParams::_internal_set_resps_to_pc_in_err_cnt(int32_t value) {
  
  resps_to_pc_in_err_cnt_ = value;
}
inline void HealthCheckParams::set_resps_to_pc_in_err_cnt(int32_t value) {
  _internal_set_resps_to_pc_in_err_cnt(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.HealthCheckParams.resps_to_pc_in_err_cnt)
}

// -------------------------------------------------------------------

// PayloadMetricsInfo

// int32 counter = 1;
inline void PayloadMetricsInfo::clear_counter() {
  counter_ = 0;
}
inline int32_t PayloadMetricsInfo::_internal_counter() const {
  return counter_;
}
inline int32_t PayloadMetricsInfo::counter() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.PayloadMetricsInfo.counter)
  return _internal_counter();
}
inline void PayloadMetricsInfo::_internal_set_counter(int32_t value) {
  
  counter_ = value;
}
inline void PayloadMetricsInfo::set_counter(int32_t value) {
  _internal_set_counter(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.PayloadMetricsInfo.counter)
}

// string names = 2;
inline void PayloadMetricsInfo::clear_names() {
  names_.ClearToEmpty();
}
inline const std::string& PayloadMetricsInfo::names() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.PayloadMetricsInfo.names)
  return _internal_names();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PayloadMetricsInfo::set_names(ArgT0&& arg0, ArgT... args) {
 
 names_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.PayloadMetricsInfo.names)
}
inline std::string* PayloadMetricsInfo::mutable_names() {
  std::string* _s = _internal_mutable_names();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.PayloadMetricsInfo.names)
  return _s;
}
inline const std::string& PayloadMetricsInfo::_internal_names() const {
  return names_.Get();
}
inline void PayloadMetricsInfo::_internal_set_names(const std::string& value) {
  
  names_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PayloadMetricsInfo::_internal_mutable_names() {
  
  return names_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PayloadMetricsInfo::release_names() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.PayloadMetricsInfo.names)
  return names_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PayloadMetricsInfo::set_allocated_names(std::string* names) {
  if (names != nullptr) {
    
  } else {
    
  }
  names_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), names,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (names_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    names_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.PayloadMetricsInfo.names)
}

// -------------------------------------------------------------------

// ReqPayloadMetricsParams

// int32 correlation_id = 1;
inline void ReqPayloadMetricsParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqPayloadMetricsParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqPayloadMetricsParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqPayloadMetricsParams.correlation_id)
  return _internal_correlation_id();
}
inline void ReqPayloadMetricsParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqPayloadMetricsParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqPayloadMetricsParams.correlation_id)
}

// -------------------------------------------------------------------

// PayloadMetricsResponse

// int32 correlation_id = 1;
inline void PayloadMetricsResponse::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t PayloadMetricsResponse::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t PayloadMetricsResponse::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.PayloadMetricsResponse.correlation_id)
  return _internal_correlation_id();
}
inline void PayloadMetricsResponse::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void PayloadMetricsResponse::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.PayloadMetricsResponse.correlation_id)
}

// int64 timestamp = 2;
inline void PayloadMetricsResponse::clear_timestamp() {
  timestamp_ = int64_t{0};
}
inline int64_t PayloadMetricsResponse::_internal_timestamp() const {
  return timestamp_;
}
inline int64_t PayloadMetricsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.PayloadMetricsResponse.timestamp)
  return _internal_timestamp();
}
inline void PayloadMetricsResponse::_internal_set_timestamp(int64_t value) {
  
  timestamp_ = value;
}
inline void PayloadMetricsResponse::set_timestamp(int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.PayloadMetricsResponse.timestamp)
}

// int32 used_counter = 3;
inline void PayloadMetricsResponse::clear_used_counter() {
  used_counter_ = 0;
}
inline int32_t PayloadMetricsResponse::_internal_used_counter() const {
  return used_counter_;
}
inline int32_t PayloadMetricsResponse::used_counter() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.PayloadMetricsResponse.used_counter)
  return _internal_used_counter();
}
inline void PayloadMetricsResponse::_internal_set_used_counter(int32_t value) {
  
  used_counter_ = value;
}
inline void PayloadMetricsResponse::set_used_counter(int32_t value) {
  _internal_set_used_counter(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.PayloadMetricsResponse.used_counter)
}

// repeated .antaris_api_peer_to_peer.PayloadMetricsInfo metrics = 4;
inline int PayloadMetricsResponse::_internal_metrics_size() const {
  return metrics_.size();
}
inline int PayloadMetricsResponse::metrics_size() const {
  return _internal_metrics_size();
}
inline void PayloadMetricsResponse::clear_metrics() {
  metrics_.Clear();
}
inline ::antaris_api_peer_to_peer::PayloadMetricsInfo* PayloadMetricsResponse::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.PayloadMetricsResponse.metrics)
  return metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::antaris_api_peer_to_peer::PayloadMetricsInfo >*
PayloadMetricsResponse::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.PayloadMetricsResponse.metrics)
  return &metrics_;
}
inline const ::antaris_api_peer_to_peer::PayloadMetricsInfo& PayloadMetricsResponse::_internal_metrics(int index) const {
  return metrics_.Get(index);
}
inline const ::antaris_api_peer_to_peer::PayloadMetricsInfo& PayloadMetricsResponse::metrics(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.PayloadMetricsResponse.metrics)
  return _internal_metrics(index);
}
inline ::antaris_api_peer_to_peer::PayloadMetricsInfo* PayloadMetricsResponse::_internal_add_metrics() {
  return metrics_.Add();
}
inline ::antaris_api_peer_to_peer::PayloadMetricsInfo* PayloadMetricsResponse::add_metrics() {
  ::antaris_api_peer_to_peer::PayloadMetricsInfo* _add = _internal_add_metrics();
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.PayloadMetricsResponse.metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::antaris_api_peer_to_peer::PayloadMetricsInfo >&
PayloadMetricsResponse::metrics() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.PayloadMetricsResponse.metrics)
  return metrics_;
}

// -------------------------------------------------------------------

// CmdSequenceDoneParams

// string sequence_id = 1;
inline void CmdSequenceDoneParams::clear_sequence_id() {
  sequence_id_.ClearToEmpty();
}
inline const std::string& CmdSequenceDoneParams::sequence_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.CmdSequenceDoneParams.sequence_id)
  return _internal_sequence_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CmdSequenceDoneParams::set_sequence_id(ArgT0&& arg0, ArgT... args) {
 
 sequence_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.CmdSequenceDoneParams.sequence_id)
}
inline std::string* CmdSequenceDoneParams::mutable_sequence_id() {
  std::string* _s = _internal_mutable_sequence_id();
  // @@protoc_insertion_point(field_mutable:antaris_api_peer_to_peer.CmdSequenceDoneParams.sequence_id)
  return _s;
}
inline const std::string& CmdSequenceDoneParams::_internal_sequence_id() const {
  return sequence_id_.Get();
}
inline void CmdSequenceDoneParams::_internal_set_sequence_id(const std::string& value) {
  
  sequence_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CmdSequenceDoneParams::_internal_mutable_sequence_id() {
  
  return sequence_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CmdSequenceDoneParams::release_sequence_id() {
  // @@protoc_insertion_point(field_release:antaris_api_peer_to_peer.CmdSequenceDoneParams.sequence_id)
  return sequence_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CmdSequenceDoneParams::set_allocated_sequence_id(std::string* sequence_id) {
  if (sequence_id != nullptr) {
    
  } else {
    
  }
  sequence_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sequence_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (sequence_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    sequence_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:antaris_api_peer_to_peer.CmdSequenceDoneParams.sequence_id)
}

// -------------------------------------------------------------------

// ReqGnssEphStopDataReq

// int32 correlation_id = 1;
inline void ReqGnssEphStopDataReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqGnssEphStopDataReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqGnssEphStopDataReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGnssEphStopDataReq.correlation_id)
  return _internal_correlation_id();
}
inline void ReqGnssEphStopDataReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqGnssEphStopDataReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGnssEphStopDataReq.correlation_id)
}

// -------------------------------------------------------------------

// RespGnssEphStopDataReq

// int32 correlation_id = 1;
inline void RespGnssEphStopDataReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespGnssEphStopDataReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespGnssEphStopDataReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGnssEphStopDataReq.correlation_id)
  return _internal_correlation_id();
}
inline void RespGnssEphStopDataReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespGnssEphStopDataReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGnssEphStopDataReq.correlation_id)
}

// int32 req_status = 2;
inline void RespGnssEphStopDataReq::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespGnssEphStopDataReq::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespGnssEphStopDataReq::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGnssEphStopDataReq.req_status)
  return _internal_req_status();
}
inline void RespGnssEphStopDataReq::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespGnssEphStopDataReq::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGnssEphStopDataReq.req_status)
}

// -------------------------------------------------------------------

// ReqGnssEphStartDataReq

// int32 correlation_id = 1;
inline void ReqGnssEphStartDataReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqGnssEphStartDataReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqGnssEphStartDataReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGnssEphStartDataReq.correlation_id)
  return _internal_correlation_id();
}
inline void ReqGnssEphStartDataReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqGnssEphStartDataReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGnssEphStartDataReq.correlation_id)
}

// int32 periodicity_in_ms = 2;
inline void ReqGnssEphStartDataReq::clear_periodicity_in_ms() {
  periodicity_in_ms_ = 0;
}
inline int32_t ReqGnssEphStartDataReq::_internal_periodicity_in_ms() const {
  return periodicity_in_ms_;
}
inline int32_t ReqGnssEphStartDataReq::periodicity_in_ms() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGnssEphStartDataReq.periodicity_in_ms)
  return _internal_periodicity_in_ms();
}
inline void ReqGnssEphStartDataReq::_internal_set_periodicity_in_ms(int32_t value) {
  
  periodicity_in_ms_ = value;
}
inline void ReqGnssEphStartDataReq::set_periodicity_in_ms(int32_t value) {
  _internal_set_periodicity_in_ms(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGnssEphStartDataReq.periodicity_in_ms)
}

// int32 eph2_enable = 3;
inline void ReqGnssEphStartDataReq::clear_eph2_enable() {
  eph2_enable_ = 0;
}
inline int32_t ReqGnssEphStartDataReq::_internal_eph2_enable() const {
  return eph2_enable_;
}
inline int32_t ReqGnssEphStartDataReq::eph2_enable() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGnssEphStartDataReq.eph2_enable)
  return _internal_eph2_enable();
}
inline void ReqGnssEphStartDataReq::_internal_set_eph2_enable(int32_t value) {
  
  eph2_enable_ = value;
}
inline void ReqGnssEphStartDataReq::set_eph2_enable(int32_t value) {
  _internal_set_eph2_enable(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGnssEphStartDataReq.eph2_enable)
}

// -------------------------------------------------------------------

// RespGnssEphStartDataReq

// int32 correlation_id = 1;
inline void RespGnssEphStartDataReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespGnssEphStartDataReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespGnssEphStartDataReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGnssEphStartDataReq.correlation_id)
  return _internal_correlation_id();
}
inline void RespGnssEphStartDataReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespGnssEphStartDataReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGnssEphStartDataReq.correlation_id)
}

// int32 req_status = 2;
inline void RespGnssEphStartDataReq::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespGnssEphStartDataReq::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespGnssEphStartDataReq::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGnssEphStartDataReq.req_status)
  return _internal_req_status();
}
inline void RespGnssEphStartDataReq::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespGnssEphStartDataReq::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGnssEphStartDataReq.req_status)
}

// -------------------------------------------------------------------

// GnssEphData

// int32 correlation_id = 1;
inline void GnssEphData::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t GnssEphData::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t GnssEphData::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.correlation_id)
  return _internal_correlation_id();
}
inline void GnssEphData::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void GnssEphData::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.correlation_id)
}

// int32 gps_fix_time = 2;
inline void GnssEphData::clear_gps_fix_time() {
  gps_fix_time_ = 0;
}
inline int32_t GnssEphData::_internal_gps_fix_time() const {
  return gps_fix_time_;
}
inline int32_t GnssEphData::gps_fix_time() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.gps_fix_time)
  return _internal_gps_fix_time();
}
inline void GnssEphData::_internal_set_gps_fix_time(int32_t value) {
  
  gps_fix_time_ = value;
}
inline void GnssEphData::set_gps_fix_time(int32_t value) {
  _internal_set_gps_fix_time(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.gps_fix_time)
}

// int32 gps_sys_time = 3;
inline void GnssEphData::clear_gps_sys_time() {
  gps_sys_time_ = 0;
}
inline int32_t GnssEphData::_internal_gps_sys_time() const {
  return gps_sys_time_;
}
inline int32_t GnssEphData::gps_sys_time() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.gps_sys_time)
  return _internal_gps_sys_time();
}
inline void GnssEphData::_internal_set_gps_sys_time(int32_t value) {
  
  gps_sys_time_ = value;
}
inline void GnssEphData::set_gps_sys_time(int32_t value) {
  _internal_set_gps_sys_time(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.gps_sys_time)
}

// int64 obc_time = 4;
inline void GnssEphData::clear_obc_time() {
  obc_time_ = int64_t{0};
}
inline int64_t GnssEphData::_internal_obc_time() const {
  return obc_time_;
}
inline int64_t GnssEphData::obc_time() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.obc_time)
  return _internal_obc_time();
}
inline void GnssEphData::_internal_set_obc_time(int64_t value) {
  
  obc_time_ = value;
}
inline void GnssEphData::set_obc_time(int64_t value) {
  _internal_set_obc_time(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.obc_time)
}

// repeated int32 gps_position_ecef = 5;
inline int GnssEphData::_internal_gps_position_ecef_size() const {
  return gps_position_ecef_.size();
}
inline int GnssEphData::gps_position_ecef_size() const {
  return _internal_gps_position_ecef_size();
}
inline void GnssEphData::clear_gps_position_ecef() {
  gps_position_ecef_.Clear();
}
inline int32_t GnssEphData::_internal_gps_position_ecef(int index) const {
  return gps_position_ecef_.Get(index);
}
inline int32_t GnssEphData::gps_position_ecef(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.gps_position_ecef)
  return _internal_gps_position_ecef(index);
}
inline void GnssEphData::set_gps_position_ecef(int index, int32_t value) {
  gps_position_ecef_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.gps_position_ecef)
}
inline void GnssEphData::_internal_add_gps_position_ecef(int32_t value) {
  gps_position_ecef_.Add(value);
}
inline void GnssEphData::add_gps_position_ecef(int32_t value) {
  _internal_add_gps_position_ecef(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.gps_position_ecef)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_gps_position_ecef() const {
  return gps_position_ecef_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::gps_position_ecef() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.gps_position_ecef)
  return _internal_gps_position_ecef();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_gps_position_ecef() {
  return &gps_position_ecef_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_gps_position_ecef() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.gps_position_ecef)
  return _internal_mutable_gps_position_ecef();
}

// repeated int32 gps_velocity_ecef = 6;
inline int GnssEphData::_internal_gps_velocity_ecef_size() const {
  return gps_velocity_ecef_.size();
}
inline int GnssEphData::gps_velocity_ecef_size() const {
  return _internal_gps_velocity_ecef_size();
}
inline void GnssEphData::clear_gps_velocity_ecef() {
  gps_velocity_ecef_.Clear();
}
inline int32_t GnssEphData::_internal_gps_velocity_ecef(int index) const {
  return gps_velocity_ecef_.Get(index);
}
inline int32_t GnssEphData::gps_velocity_ecef(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.gps_velocity_ecef)
  return _internal_gps_velocity_ecef(index);
}
inline void GnssEphData::set_gps_velocity_ecef(int index, int32_t value) {
  gps_velocity_ecef_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.gps_velocity_ecef)
}
inline void GnssEphData::_internal_add_gps_velocity_ecef(int32_t value) {
  gps_velocity_ecef_.Add(value);
}
inline void GnssEphData::add_gps_velocity_ecef(int32_t value) {
  _internal_add_gps_velocity_ecef(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.gps_velocity_ecef)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_gps_velocity_ecef() const {
  return gps_velocity_ecef_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::gps_velocity_ecef() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.gps_velocity_ecef)
  return _internal_gps_velocity_ecef();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_gps_velocity_ecef() {
  return &gps_velocity_ecef_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_gps_velocity_ecef() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.gps_velocity_ecef)
  return _internal_mutable_gps_velocity_ecef();
}

// int32 gps_validity_flag_pos_vel = 7;
inline void GnssEphData::clear_gps_validity_flag_pos_vel() {
  gps_validity_flag_pos_vel_ = 0;
}
inline int32_t GnssEphData::_internal_gps_validity_flag_pos_vel() const {
  return gps_validity_flag_pos_vel_;
}
inline int32_t GnssEphData::gps_validity_flag_pos_vel() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.gps_validity_flag_pos_vel)
  return _internal_gps_validity_flag_pos_vel();
}
inline void GnssEphData::_internal_set_gps_validity_flag_pos_vel(int32_t value) {
  
  gps_validity_flag_pos_vel_ = value;
}
inline void GnssEphData::set_gps_validity_flag_pos_vel(int32_t value) {
  _internal_set_gps_validity_flag_pos_vel(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.gps_validity_flag_pos_vel)
}

// int64 adcs_time = 8;
inline void GnssEphData::clear_adcs_time() {
  adcs_time_ = int64_t{0};
}
inline int64_t GnssEphData::_internal_adcs_time() const {
  return adcs_time_;
}
inline int64_t GnssEphData::adcs_time() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.adcs_time)
  return _internal_adcs_time();
}
inline void GnssEphData::_internal_set_adcs_time(int64_t value) {
  
  adcs_time_ = value;
}
inline void GnssEphData::set_adcs_time(int64_t value) {
  _internal_set_adcs_time(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.adcs_time)
}

// repeated int64 position_wrt_eci = 9;
inline int GnssEphData::_internal_position_wrt_eci_size() const {
  return position_wrt_eci_.size();
}
inline int GnssEphData::position_wrt_eci_size() const {
  return _internal_position_wrt_eci_size();
}
inline void GnssEphData::clear_position_wrt_eci() {
  position_wrt_eci_.Clear();
}
inline int64_t GnssEphData::_internal_position_wrt_eci(int index) const {
  return position_wrt_eci_.Get(index);
}
inline int64_t GnssEphData::position_wrt_eci(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.position_wrt_eci)
  return _internal_position_wrt_eci(index);
}
inline void GnssEphData::set_position_wrt_eci(int index, int64_t value) {
  position_wrt_eci_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.position_wrt_eci)
}
inline void GnssEphData::_internal_add_position_wrt_eci(int64_t value) {
  position_wrt_eci_.Add(value);
}
inline void GnssEphData::add_position_wrt_eci(int64_t value) {
  _internal_add_position_wrt_eci(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.position_wrt_eci)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::_internal_position_wrt_eci() const {
  return position_wrt_eci_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::position_wrt_eci() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.position_wrt_eci)
  return _internal_position_wrt_eci();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::_internal_mutable_position_wrt_eci() {
  return &position_wrt_eci_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::mutable_position_wrt_eci() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.position_wrt_eci)
  return _internal_mutable_position_wrt_eci();
}

// repeated int64 velocity_wrt_eci = 10;
inline int GnssEphData::_internal_velocity_wrt_eci_size() const {
  return velocity_wrt_eci_.size();
}
inline int GnssEphData::velocity_wrt_eci_size() const {
  return _internal_velocity_wrt_eci_size();
}
inline void GnssEphData::clear_velocity_wrt_eci() {
  velocity_wrt_eci_.Clear();
}
inline int64_t GnssEphData::_internal_velocity_wrt_eci(int index) const {
  return velocity_wrt_eci_.Get(index);
}
inline int64_t GnssEphData::velocity_wrt_eci(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_eci)
  return _internal_velocity_wrt_eci(index);
}
inline void GnssEphData::set_velocity_wrt_eci(int index, int64_t value) {
  velocity_wrt_eci_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_eci)
}
inline void GnssEphData::_internal_add_velocity_wrt_eci(int64_t value) {
  velocity_wrt_eci_.Add(value);
}
inline void GnssEphData::add_velocity_wrt_eci(int64_t value) {
  _internal_add_velocity_wrt_eci(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_eci)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::_internal_velocity_wrt_eci() const {
  return velocity_wrt_eci_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::velocity_wrt_eci() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_eci)
  return _internal_velocity_wrt_eci();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::_internal_mutable_velocity_wrt_eci() {
  return &velocity_wrt_eci_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::mutable_velocity_wrt_eci() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_eci)
  return _internal_mutable_velocity_wrt_eci();
}

// repeated int64 position_wrt_ecef = 11;
inline int GnssEphData::_internal_position_wrt_ecef_size() const {
  return position_wrt_ecef_.size();
}
inline int GnssEphData::position_wrt_ecef_size() const {
  return _internal_position_wrt_ecef_size();
}
inline void GnssEphData::clear_position_wrt_ecef() {
  position_wrt_ecef_.Clear();
}
inline int64_t GnssEphData::_internal_position_wrt_ecef(int index) const {
  return position_wrt_ecef_.Get(index);
}
inline int64_t GnssEphData::position_wrt_ecef(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.position_wrt_ecef)
  return _internal_position_wrt_ecef(index);
}
inline void GnssEphData::set_position_wrt_ecef(int index, int64_t value) {
  position_wrt_ecef_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.position_wrt_ecef)
}
inline void GnssEphData::_internal_add_position_wrt_ecef(int64_t value) {
  position_wrt_ecef_.Add(value);
}
inline void GnssEphData::add_position_wrt_ecef(int64_t value) {
  _internal_add_position_wrt_ecef(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.position_wrt_ecef)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::_internal_position_wrt_ecef() const {
  return position_wrt_ecef_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::position_wrt_ecef() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.position_wrt_ecef)
  return _internal_position_wrt_ecef();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::_internal_mutable_position_wrt_ecef() {
  return &position_wrt_ecef_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::mutable_position_wrt_ecef() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.position_wrt_ecef)
  return _internal_mutable_position_wrt_ecef();
}

// repeated int64 velocity_wrt_ecef = 12;
inline int GnssEphData::_internal_velocity_wrt_ecef_size() const {
  return velocity_wrt_ecef_.size();
}
inline int GnssEphData::velocity_wrt_ecef_size() const {
  return _internal_velocity_wrt_ecef_size();
}
inline void GnssEphData::clear_velocity_wrt_ecef() {
  velocity_wrt_ecef_.Clear();
}
inline int64_t GnssEphData::_internal_velocity_wrt_ecef(int index) const {
  return velocity_wrt_ecef_.Get(index);
}
inline int64_t GnssEphData::velocity_wrt_ecef(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_ecef)
  return _internal_velocity_wrt_ecef(index);
}
inline void GnssEphData::set_velocity_wrt_ecef(int index, int64_t value) {
  velocity_wrt_ecef_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_ecef)
}
inline void GnssEphData::_internal_add_velocity_wrt_ecef(int64_t value) {
  velocity_wrt_ecef_.Add(value);
}
inline void GnssEphData::add_velocity_wrt_ecef(int64_t value) {
  _internal_add_velocity_wrt_ecef(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_ecef)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::_internal_velocity_wrt_ecef() const {
  return velocity_wrt_ecef_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GnssEphData::velocity_wrt_ecef() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_ecef)
  return _internal_velocity_wrt_ecef();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::_internal_mutable_velocity_wrt_ecef() {
  return &velocity_wrt_ecef_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GnssEphData::mutable_velocity_wrt_ecef() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.velocity_wrt_ecef)
  return _internal_mutable_velocity_wrt_ecef();
}

// repeated int32 body_rate = 13;
inline int GnssEphData::_internal_body_rate_size() const {
  return body_rate_.size();
}
inline int GnssEphData::body_rate_size() const {
  return _internal_body_rate_size();
}
inline void GnssEphData::clear_body_rate() {
  body_rate_.Clear();
}
inline int32_t GnssEphData::_internal_body_rate(int index) const {
  return body_rate_.Get(index);
}
inline int32_t GnssEphData::body_rate(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.body_rate)
  return _internal_body_rate(index);
}
inline void GnssEphData::set_body_rate(int index, int32_t value) {
  body_rate_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.body_rate)
}
inline void GnssEphData::_internal_add_body_rate(int32_t value) {
  body_rate_.Add(value);
}
inline void GnssEphData::add_body_rate(int32_t value) {
  _internal_add_body_rate(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.body_rate)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_body_rate() const {
  return body_rate_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::body_rate() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.body_rate)
  return _internal_body_rate();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_body_rate() {
  return &body_rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_body_rate() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.body_rate)
  return _internal_mutable_body_rate();
}

// repeated int32 attitude = 14;
inline int GnssEphData::_internal_attitude_size() const {
  return attitude_.size();
}
inline int GnssEphData::attitude_size() const {
  return _internal_attitude_size();
}
inline void GnssEphData::clear_attitude() {
  attitude_.Clear();
}
inline int32_t GnssEphData::_internal_attitude(int index) const {
  return attitude_.Get(index);
}
inline int32_t GnssEphData::attitude(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.attitude)
  return _internal_attitude(index);
}
inline void GnssEphData::set_attitude(int index, int32_t value) {
  attitude_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.attitude)
}
inline void GnssEphData::_internal_add_attitude(int32_t value) {
  attitude_.Add(value);
}
inline void GnssEphData::add_attitude(int32_t value) {
  _internal_add_attitude(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.attitude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_attitude() const {
  return attitude_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::attitude() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.attitude)
  return _internal_attitude();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_attitude() {
  return &attitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_attitude() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.attitude)
  return _internal_mutable_attitude();
}

// repeated int32 adcs_pos = 15;
inline int GnssEphData::_internal_adcs_pos_size() const {
  return adcs_pos_.size();
}
inline int GnssEphData::adcs_pos_size() const {
  return _internal_adcs_pos_size();
}
inline void GnssEphData::clear_adcs_pos() {
  adcs_pos_.Clear();
}
inline int32_t GnssEphData::_internal_adcs_pos(int index) const {
  return adcs_pos_.Get(index);
}
inline int32_t GnssEphData::adcs_pos(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.adcs_pos)
  return _internal_adcs_pos(index);
}
inline void GnssEphData::set_adcs_pos(int index, int32_t value) {
  adcs_pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.adcs_pos)
}
inline void GnssEphData::_internal_add_adcs_pos(int32_t value) {
  adcs_pos_.Add(value);
}
inline void GnssEphData::add_adcs_pos(int32_t value) {
  _internal_add_adcs_pos(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.adcs_pos)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_adcs_pos() const {
  return adcs_pos_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::adcs_pos() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.adcs_pos)
  return _internal_adcs_pos();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_adcs_pos() {
  return &adcs_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_adcs_pos() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.adcs_pos)
  return _internal_mutable_adcs_pos();
}

// repeated int32 nadir_vector_body = 16;
inline int GnssEphData::_internal_nadir_vector_body_size() const {
  return nadir_vector_body_.size();
}
inline int GnssEphData::nadir_vector_body_size() const {
  return _internal_nadir_vector_body_size();
}
inline void GnssEphData::clear_nadir_vector_body() {
  nadir_vector_body_.Clear();
}
inline int32_t GnssEphData::_internal_nadir_vector_body(int index) const {
  return nadir_vector_body_.Get(index);
}
inline int32_t GnssEphData::nadir_vector_body(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.nadir_vector_body)
  return _internal_nadir_vector_body(index);
}
inline void GnssEphData::set_nadir_vector_body(int index, int32_t value) {
  nadir_vector_body_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.nadir_vector_body)
}
inline void GnssEphData::_internal_add_nadir_vector_body(int32_t value) {
  nadir_vector_body_.Add(value);
}
inline void GnssEphData::add_nadir_vector_body(int32_t value) {
  _internal_add_nadir_vector_body(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.nadir_vector_body)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_nadir_vector_body() const {
  return nadir_vector_body_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::nadir_vector_body() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.nadir_vector_body)
  return _internal_nadir_vector_body();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_nadir_vector_body() {
  return &nadir_vector_body_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_nadir_vector_body() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.nadir_vector_body)
  return _internal_mutable_nadir_vector_body();
}

// repeated int32 gd_nadir_vector_body = 17;
inline int GnssEphData::_internal_gd_nadir_vector_body_size() const {
  return gd_nadir_vector_body_.size();
}
inline int GnssEphData::gd_nadir_vector_body_size() const {
  return _internal_gd_nadir_vector_body_size();
}
inline void GnssEphData::clear_gd_nadir_vector_body() {
  gd_nadir_vector_body_.Clear();
}
inline int32_t GnssEphData::_internal_gd_nadir_vector_body(int index) const {
  return gd_nadir_vector_body_.Get(index);
}
inline int32_t GnssEphData::gd_nadir_vector_body(int index) const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.gd_nadir_vector_body)
  return _internal_gd_nadir_vector_body(index);
}
inline void GnssEphData::set_gd_nadir_vector_body(int index, int32_t value) {
  gd_nadir_vector_body_.Set(index, value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.gd_nadir_vector_body)
}
inline void GnssEphData::_internal_add_gd_nadir_vector_body(int32_t value) {
  gd_nadir_vector_body_.Add(value);
}
inline void GnssEphData::add_gd_nadir_vector_body(int32_t value) {
  _internal_add_gd_nadir_vector_body(value);
  // @@protoc_insertion_point(field_add:antaris_api_peer_to_peer.GnssEphData.gd_nadir_vector_body)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::_internal_gd_nadir_vector_body() const {
  return gd_nadir_vector_body_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
GnssEphData::gd_nadir_vector_body() const {
  // @@protoc_insertion_point(field_list:antaris_api_peer_to_peer.GnssEphData.gd_nadir_vector_body)
  return _internal_gd_nadir_vector_body();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::_internal_mutable_gd_nadir_vector_body() {
  return &gd_nadir_vector_body_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
GnssEphData::mutable_gd_nadir_vector_body() {
  // @@protoc_insertion_point(field_mutable_list:antaris_api_peer_to_peer.GnssEphData.gd_nadir_vector_body)
  return _internal_mutable_gd_nadir_vector_body();
}

// int32 beta_angle = 18;
inline void GnssEphData::clear_beta_angle() {
  beta_angle_ = 0;
}
inline int32_t GnssEphData::_internal_beta_angle() const {
  return beta_angle_;
}
inline int32_t GnssEphData::beta_angle() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.beta_angle)
  return _internal_beta_angle();
}
inline void GnssEphData::_internal_set_beta_angle(int32_t value) {
  
  beta_angle_ = value;
}
inline void GnssEphData::set_beta_angle(int32_t value) {
  _internal_set_beta_angle(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.beta_angle)
}

// int32 validity_flags = 19;
inline void GnssEphData::clear_validity_flags() {
  validity_flags_ = 0;
}
inline int32_t GnssEphData::_internal_validity_flags() const {
  return validity_flags_;
}
inline int32_t GnssEphData::validity_flags() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GnssEphData.validity_flags)
  return _internal_validity_flags();
}
inline void GnssEphData::_internal_set_validity_flags(int32_t value) {
  
  validity_flags_ = value;
}
inline void GnssEphData::set_validity_flags(int32_t value) {
  _internal_set_validity_flags(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GnssEphData.validity_flags)
}

// -------------------------------------------------------------------

// ReqGetEpsVoltageStopReq

// int32 correlation_id = 1;
inline void ReqGetEpsVoltageStopReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqGetEpsVoltageStopReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqGetEpsVoltageStopReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGetEpsVoltageStopReq.correlation_id)
  return _internal_correlation_id();
}
inline void ReqGetEpsVoltageStopReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqGetEpsVoltageStopReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGetEpsVoltageStopReq.correlation_id)
}

// -------------------------------------------------------------------

// RespGetEpsVoltageStopReq

// int32 correlation_id = 1;
inline void RespGetEpsVoltageStopReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespGetEpsVoltageStopReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespGetEpsVoltageStopReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetEpsVoltageStopReq.correlation_id)
  return _internal_correlation_id();
}
inline void RespGetEpsVoltageStopReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespGetEpsVoltageStopReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetEpsVoltageStopReq.correlation_id)
}

// int32 req_status = 2;
inline void RespGetEpsVoltageStopReq::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespGetEpsVoltageStopReq::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespGetEpsVoltageStopReq::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetEpsVoltageStopReq.req_status)
  return _internal_req_status();
}
inline void RespGetEpsVoltageStopReq::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespGetEpsVoltageStopReq::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetEpsVoltageStopReq.req_status)
}

// -------------------------------------------------------------------

// ReqGetEpsVoltageStartReq

// int32 correlation_id = 1;
inline void ReqGetEpsVoltageStartReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t ReqGetEpsVoltageStartReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t ReqGetEpsVoltageStartReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq.correlation_id)
  return _internal_correlation_id();
}
inline void ReqGetEpsVoltageStartReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void ReqGetEpsVoltageStartReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq.correlation_id)
}

// int32 periodicity_in_ms = 2;
inline void ReqGetEpsVoltageStartReq::clear_periodicity_in_ms() {
  periodicity_in_ms_ = 0;
}
inline int32_t ReqGetEpsVoltageStartReq::_internal_periodicity_in_ms() const {
  return periodicity_in_ms_;
}
inline int32_t ReqGetEpsVoltageStartReq::periodicity_in_ms() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq.periodicity_in_ms)
  return _internal_periodicity_in_ms();
}
inline void ReqGetEpsVoltageStartReq::_internal_set_periodicity_in_ms(int32_t value) {
  
  periodicity_in_ms_ = value;
}
inline void ReqGetEpsVoltageStartReq::set_periodicity_in_ms(int32_t value) {
  _internal_set_periodicity_in_ms(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.ReqGetEpsVoltageStartReq.periodicity_in_ms)
}

// -------------------------------------------------------------------

// RespGetEpsVoltageStartReq

// int32 correlation_id = 1;
inline void RespGetEpsVoltageStartReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespGetEpsVoltageStartReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespGetEpsVoltageStartReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetEpsVoltageStartReq.correlation_id)
  return _internal_correlation_id();
}
inline void RespGetEpsVoltageStartReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespGetEpsVoltageStartReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetEpsVoltageStartReq.correlation_id)
}

// int32 req_status = 2;
inline void RespGetEpsVoltageStartReq::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespGetEpsVoltageStartReq::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespGetEpsVoltageStartReq::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespGetEpsVoltageStartReq.req_status)
  return _internal_req_status();
}
inline void RespGetEpsVoltageStartReq::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespGetEpsVoltageStartReq::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespGetEpsVoltageStartReq.req_status)
}

// -------------------------------------------------------------------

// GetEpsVoltage

// int32 correlation_id = 1;
inline void GetEpsVoltage::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t GetEpsVoltage::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t GetEpsVoltage::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GetEpsVoltage.correlation_id)
  return _internal_correlation_id();
}
inline void GetEpsVoltage::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void GetEpsVoltage::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GetEpsVoltage.correlation_id)
}

// float eps_voltage = 2;
inline void GetEpsVoltage::clear_eps_voltage() {
  eps_voltage_ = 0;
}
inline float GetEpsVoltage::_internal_eps_voltage() const {
  return eps_voltage_;
}
inline float GetEpsVoltage::eps_voltage() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.GetEpsVoltage.eps_voltage)
  return _internal_eps_voltage();
}
inline void GetEpsVoltage::_internal_set_eps_voltage(float value) {
  
  eps_voltage_ = value;
}
inline void GetEpsVoltage::set_eps_voltage(float value) {
  _internal_set_eps_voltage(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.GetEpsVoltage.eps_voltage)
}

// -------------------------------------------------------------------

// StartSesThermMgmntReq

// int32 correlation_id = 1;
inline void StartSesThermMgmntReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t StartSesThermMgmntReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t StartSesThermMgmntReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSesThermMgmntReq.correlation_id)
  return _internal_correlation_id();
}
inline void StartSesThermMgmntReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void StartSesThermMgmntReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSesThermMgmntReq.correlation_id)
}

// int32 hardware_id = 2;
inline void StartSesThermMgmntReq::clear_hardware_id() {
  hardware_id_ = 0;
}
inline int32_t StartSesThermMgmntReq::_internal_hardware_id() const {
  return hardware_id_;
}
inline int32_t StartSesThermMgmntReq::hardware_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSesThermMgmntReq.hardware_id)
  return _internal_hardware_id();
}
inline void StartSesThermMgmntReq::_internal_set_hardware_id(int32_t value) {
  
  hardware_id_ = value;
}
inline void StartSesThermMgmntReq::set_hardware_id(int32_t value) {
  _internal_set_hardware_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSesThermMgmntReq.hardware_id)
}

// int32 duration = 3;
inline void StartSesThermMgmntReq::clear_duration() {
  duration_ = 0;
}
inline int32_t StartSesThermMgmntReq::_internal_duration() const {
  return duration_;
}
inline int32_t StartSesThermMgmntReq::duration() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSesThermMgmntReq.duration)
  return _internal_duration();
}
inline void StartSesThermMgmntReq::_internal_set_duration(int32_t value) {
  
  duration_ = value;
}
inline void StartSesThermMgmntReq::set_duration(int32_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSesThermMgmntReq.duration)
}

// int32 lower_threshold = 4;
inline void StartSesThermMgmntReq::clear_lower_threshold() {
  lower_threshold_ = 0;
}
inline int32_t StartSesThermMgmntReq::_internal_lower_threshold() const {
  return lower_threshold_;
}
inline int32_t StartSesThermMgmntReq::lower_threshold() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSesThermMgmntReq.lower_threshold)
  return _internal_lower_threshold();
}
inline void StartSesThermMgmntReq::_internal_set_lower_threshold(int32_t value) {
  
  lower_threshold_ = value;
}
inline void StartSesThermMgmntReq::set_lower_threshold(int32_t value) {
  _internal_set_lower_threshold(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSesThermMgmntReq.lower_threshold)
}

// int32 upper_threshold = 5;
inline void StartSesThermMgmntReq::clear_upper_threshold() {
  upper_threshold_ = 0;
}
inline int32_t StartSesThermMgmntReq::_internal_upper_threshold() const {
  return upper_threshold_;
}
inline int32_t StartSesThermMgmntReq::upper_threshold() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StartSesThermMgmntReq.upper_threshold)
  return _internal_upper_threshold();
}
inline void StartSesThermMgmntReq::_internal_set_upper_threshold(int32_t value) {
  
  upper_threshold_ = value;
}
inline void StartSesThermMgmntReq::set_upper_threshold(int32_t value) {
  _internal_set_upper_threshold(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StartSesThermMgmntReq.upper_threshold)
}

// -------------------------------------------------------------------

// RespStartSesThermMgmntReq

// int32 correlation_id = 1;
inline void RespStartSesThermMgmntReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespStartSesThermMgmntReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespStartSesThermMgmntReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespStartSesThermMgmntReq.correlation_id)
  return _internal_correlation_id();
}
inline void RespStartSesThermMgmntReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespStartSesThermMgmntReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespStartSesThermMgmntReq.correlation_id)
}

// int32 req_status = 2;
inline void RespStartSesThermMgmntReq::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespStartSesThermMgmntReq::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespStartSesThermMgmntReq::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespStartSesThermMgmntReq.req_status)
  return _internal_req_status();
}
inline void RespStartSesThermMgmntReq::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespStartSesThermMgmntReq::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespStartSesThermMgmntReq.req_status)
}

// -------------------------------------------------------------------

// StopSesThermMgmntReq

// int32 correlation_id = 1;
inline void StopSesThermMgmntReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t StopSesThermMgmntReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t StopSesThermMgmntReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StopSesThermMgmntReq.correlation_id)
  return _internal_correlation_id();
}
inline void StopSesThermMgmntReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void StopSesThermMgmntReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StopSesThermMgmntReq.correlation_id)
}

// int32 hardware_id = 2;
inline void StopSesThermMgmntReq::clear_hardware_id() {
  hardware_id_ = 0;
}
inline int32_t StopSesThermMgmntReq::_internal_hardware_id() const {
  return hardware_id_;
}
inline int32_t StopSesThermMgmntReq::hardware_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.StopSesThermMgmntReq.hardware_id)
  return _internal_hardware_id();
}
inline void StopSesThermMgmntReq::_internal_set_hardware_id(int32_t value) {
  
  hardware_id_ = value;
}
inline void StopSesThermMgmntReq::set_hardware_id(int32_t value) {
  _internal_set_hardware_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.StopSesThermMgmntReq.hardware_id)
}

// -------------------------------------------------------------------

// RespStopSesThermMgmntReq

// int32 correlation_id = 1;
inline void RespStopSesThermMgmntReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespStopSesThermMgmntReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespStopSesThermMgmntReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespStopSesThermMgmntReq.correlation_id)
  return _internal_correlation_id();
}
inline void RespStopSesThermMgmntReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespStopSesThermMgmntReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespStopSesThermMgmntReq.correlation_id)
}

// int32 req_status = 2;
inline void RespStopSesThermMgmntReq::clear_req_status() {
  req_status_ = 0;
}
inline int32_t RespStopSesThermMgmntReq::_internal_req_status() const {
  return req_status_;
}
inline int32_t RespStopSesThermMgmntReq::req_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespStopSesThermMgmntReq.req_status)
  return _internal_req_status();
}
inline void RespStopSesThermMgmntReq::_internal_set_req_status(int32_t value) {
  
  req_status_ = value;
}
inline void RespStopSesThermMgmntReq::set_req_status(int32_t value) {
  _internal_set_req_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespStopSesThermMgmntReq.req_status)
}

// -------------------------------------------------------------------

// SesTempReq

// int32 correlation_id = 1;
inline void SesTempReq::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t SesTempReq::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t SesTempReq::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.SesTempReq.correlation_id)
  return _internal_correlation_id();
}
inline void SesTempReq::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void SesTempReq::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.SesTempReq.correlation_id)
}

// int32 hardware_id = 2;
inline void SesTempReq::clear_hardware_id() {
  hardware_id_ = 0;
}
inline int32_t SesTempReq::_internal_hardware_id() const {
  return hardware_id_;
}
inline int32_t SesTempReq::hardware_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.SesTempReq.hardware_id)
  return _internal_hardware_id();
}
inline void SesTempReq::_internal_set_hardware_id(int32_t value) {
  
  hardware_id_ = value;
}
inline void SesTempReq::set_hardware_id(int32_t value) {
  _internal_set_hardware_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.SesTempReq.hardware_id)
}

// -------------------------------------------------------------------

// RespSesTempReqParams

// int32 correlation_id = 1;
inline void RespSesTempReqParams::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t RespSesTempReqParams::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t RespSesTempReqParams::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespSesTempReqParams.correlation_id)
  return _internal_correlation_id();
}
inline void RespSesTempReqParams::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void RespSesTempReqParams::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespSesTempReqParams.correlation_id)
}

// int32 temp = 2;
inline void RespSesTempReqParams::clear_temp() {
  temp_ = 0;
}
inline int32_t RespSesTempReqParams::_internal_temp() const {
  return temp_;
}
inline int32_t RespSesTempReqParams::temp() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespSesTempReqParams.temp)
  return _internal_temp();
}
inline void RespSesTempReqParams::_internal_set_temp(int32_t value) {
  
  temp_ = value;
}
inline void RespSesTempReqParams::set_temp(int32_t value) {
  _internal_set_temp(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespSesTempReqParams.temp)
}

// int32 heater_pwr_status = 3;
inline void RespSesTempReqParams::clear_heater_pwr_status() {
  heater_pwr_status_ = 0;
}
inline int32_t RespSesTempReqParams::_internal_heater_pwr_status() const {
  return heater_pwr_status_;
}
inline int32_t RespSesTempReqParams::heater_pwr_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.RespSesTempReqParams.heater_pwr_status)
  return _internal_heater_pwr_status();
}
inline void RespSesTempReqParams::_internal_set_heater_pwr_status(int32_t value) {
  
  heater_pwr_status_ = value;
}
inline void RespSesTempReqParams::set_heater_pwr_status(int32_t value) {
  _internal_set_heater_pwr_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.RespSesTempReqParams.heater_pwr_status)
}

// -------------------------------------------------------------------

// SesThermalStatusNtf

// int32 correlation_id = 1;
inline void SesThermalStatusNtf::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t SesThermalStatusNtf::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t SesThermalStatusNtf::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.SesThermalStatusNtf.correlation_id)
  return _internal_correlation_id();
}
inline void SesThermalStatusNtf::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void SesThermalStatusNtf::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.SesThermalStatusNtf.correlation_id)
}

// int32 heater_pwr_status = 2;
inline void SesThermalStatusNtf::clear_heater_pwr_status() {
  heater_pwr_status_ = 0;
}
inline int32_t SesThermalStatusNtf::_internal_heater_pwr_status() const {
  return heater_pwr_status_;
}
inline int32_t SesThermalStatusNtf::heater_pwr_status() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.SesThermalStatusNtf.heater_pwr_status)
  return _internal_heater_pwr_status();
}
inline void SesThermalStatusNtf::_internal_set_heater_pwr_status(int32_t value) {
  
  heater_pwr_status_ = value;
}
inline void SesThermalStatusNtf::set_heater_pwr_status(int32_t value) {
  _internal_set_heater_pwr_status(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.SesThermalStatusNtf.heater_pwr_status)
}

// int32 temp = 3;
inline void SesThermalStatusNtf::clear_temp() {
  temp_ = 0;
}
inline int32_t SesThermalStatusNtf::_internal_temp() const {
  return temp_;
}
inline int32_t SesThermalStatusNtf::temp() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.SesThermalStatusNtf.temp)
  return _internal_temp();
}
inline void SesThermalStatusNtf::_internal_set_temp(int32_t value) {
  
  temp_ = value;
}
inline void SesThermalStatusNtf::set_temp(int32_t value) {
  _internal_set_temp(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.SesThermalStatusNtf.temp)
}

// -------------------------------------------------------------------

// AntarisCorrelationId

// int32 correlation_id = 1;
inline void AntarisCorrelationId::clear_correlation_id() {
  correlation_id_ = 0;
}
inline int32_t AntarisCorrelationId::_internal_correlation_id() const {
  return correlation_id_;
}
inline int32_t AntarisCorrelationId::correlation_id() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.AntarisCorrelationId.correlation_id)
  return _internal_correlation_id();
}
inline void AntarisCorrelationId::_internal_set_correlation_id(int32_t value) {
  
  correlation_id_ = value;
}
inline void AntarisCorrelationId::set_correlation_id(int32_t value) {
  _internal_set_correlation_id(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.AntarisCorrelationId.correlation_id)
}

// -------------------------------------------------------------------

// AntarisReturnType

// .antaris_api_peer_to_peer.AntarisReturnCode return_code = 1;
inline void AntarisReturnType::clear_return_code() {
  return_code_ = 0;
}
inline ::antaris_api_peer_to_peer::AntarisReturnCode AntarisReturnType::_internal_return_code() const {
  return static_cast< ::antaris_api_peer_to_peer::AntarisReturnCode >(return_code_);
}
inline ::antaris_api_peer_to_peer::AntarisReturnCode AntarisReturnType::return_code() const {
  // @@protoc_insertion_point(field_get:antaris_api_peer_to_peer.AntarisReturnType.return_code)
  return _internal_return_code();
}
inline void AntarisReturnType::_internal_set_return_code(::antaris_api_peer_to_peer::AntarisReturnCode value) {
  
  return_code_ = value;
}
inline void AntarisReturnType::set_return_code(::antaris_api_peer_to_peer::AntarisReturnCode value) {
  _internal_set_return_code(value);
  // @@protoc_insertion_point(field_set:antaris_api_peer_to_peer.AntarisReturnType.return_code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace antaris_api_peer_to_peer

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::antaris_api_peer_to_peer::AntarisReturnCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::antaris_api_peer_to_peer::AntarisReturnCode>() {
  return ::antaris_api_peer_to_peer::AntarisReturnCode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_defs_2fgen_2fproto_2fantaris_5fapi_2eproto
