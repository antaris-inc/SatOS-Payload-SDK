name: master

on:
  push:
    branches: [master]
  workflow_dispatch: {}

jobs:

  setup-qemu:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

  build-tools-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push multi-arch tools image
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --push \
          -f images/sdk-tools/Dockerfile \
          -t quay.io/antaris-inc/satos-payload-sdk-tools:stable .

  ## ========================
  ## C++ App: amd64
  ## ========================
  build-cpp-app-amd64:
    runs-on: ubuntu-latest
    needs: build-tools-image
    steps:
    - uses: actions/checkout@v4

    - name: Build SDK dependencies
      run: docker run --platform linux/amd64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make api_lib agent_package

    - name: Package cpp lib
      run: docker run --platform linux/amd64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make cpp_package

    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push cpp image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --push \
          -f images/app-cpp/Dockerfile \
          -t quay.io/antaris-inc/satos-payload-app-cpp:${GITHUB_SHA}-amd64 .

  ## ========================
  ## C++ App: arm64
  ## ========================
  build-cpp-app-arm64:
    runs-on: ubuntu-latest
    needs: [setup-qemu, build-tools-image]
    steps:
    - uses: actions/checkout@v4

    - name: Build SDK dependencies
      run: docker run --platform linux/arm64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make api_lib agent_package

    - name: Package cpp lib
      run: docker run --platform linux/arm64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make cpp_package

    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push cpp image
      run: |
        docker buildx build \
          --platform linux/arm64 \
          --push \
          -f images/app-cpp/Dockerfile \
          -t quay.io/antaris-inc/satos-payload-app-cpp:${GITHUB_SHA}-arm64 .

  ## ========================
  ## Python App: amd64
  ## ========================
  build-python-app-amd64:
    runs-on: ubuntu-latest
    needs: build-tools-image
    steps:
    - uses: actions/checkout@v4

    - name: Build SDK dependencies
      run: docker run --platform linux/amd64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make api_lib agent_package
  
    - name: Package python lib
      run: docker run --platform linux/amd64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make python_package

    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push python image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --push \
          -f images/app-python/Dockerfile \
          -t quay.io/antaris-inc/satos-payload-app-python:${GITHUB_SHA}-amd64 .

  ## ========================
  ## Python App: arm64
  ## ========================
  build-python-app-arm64:
    runs-on: ubuntu-latest
    needs: [setup-qemu, build-tools-image]
    steps:
    - uses: actions/checkout@v4

    - name: Build SDK dependencies
      run: docker run --platform linux/arm64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make api_lib agent_package

    - name: Package python lib
      run: docker run --platform linux/arm64 -v $PWD:/workspace quay.io/antaris-inc/satos-payload-sdk-tools:stable make python_package

    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push python image
      run: |
        docker buildx build \
          --platform linux/arm64 \
          --push \
          -f images/app-python/Dockerfile \
          -t quay.io/antaris-inc/satos-payload-app-python:${GITHUB_SHA}-arm64 .

  create-manifest-python:
    runs-on: ubuntu-latest
    needs: [build-python-app-amd64, build-python-app-arm64]
    steps:
    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Create multi-arch image manifest for Python app
      run: |
        docker manifest create quay.io/antaris-inc/satos-payload-app-python:stable \
          quay.io/antaris-inc/satos-payload-app-python:${GITHUB_SHA}-amd64 \
          quay.io/antaris-inc/satos-payload-app-python:${GITHUB_SHA}-arm64
        
        docker manifest push quay.io/antaris-inc/satos-payload-app-python:stable

  create-manifest-cpp:
    runs-on: ubuntu-latest
    needs: [build-cpp-app-amd64, build-cpp-app-arm64]
    steps:
    - name: Login to image registry
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Create multi-arch image manifest for C++ app
      run: |
        docker manifest create quay.io/antaris-inc/satos-payload-app-cpp:stable \
          quay.io/antaris-inc/satos-payload-app-cpp:${GITHUB_SHA}-amd64 \
          quay.io/antaris-inc/satos-payload-app-cpp:${GITHUB_SHA}-arm64
        
        docker manifest push quay.io/antaris-inc/satos-payload-app-cpp:stable